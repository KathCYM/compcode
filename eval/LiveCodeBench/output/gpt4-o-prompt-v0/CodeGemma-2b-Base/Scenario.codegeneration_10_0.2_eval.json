[
    {
        "pass@1": 0.06846846846846848,
        "pass@5": 0.11532961532961532,
        "pass@10": 0.12612612612612611,
        "detail": {
            "pass@1": {
                "0": 0.0,
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.7999999999999999,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0,
                "16": 0.0,
                "17": 0.0,
                "18": 0.0,
                "19": 0.0,
                "20": 0.0,
                "21": 0.0,
                "22": 0.0,
                "23": 0.20000000000000007,
                "24": 0.0,
                "25": 0.0,
                "26": 0.0,
                "27": 0.0,
                "28": 1.0,
                "29": 0.0,
                "30": 0.0,
                "31": 0.0,
                "32": 0.0,
                "33": 0.0,
                "34": 0.0,
                "35": 0.0,
                "36": 0.0,
                "37": 0.30000000000000004,
                "38": 0.0,
                "39": 0.0,
                "40": 0.0,
                "41": 0.0,
                "42": 0.0,
                "43": 0.0,
                "44": 0.0,
                "45": 0.30000000000000004,
                "46": 0.0,
                "47": 0.0,
                "48": 0.0,
                "49": 0.0,
                "50": 0.7999999999999999,
                "51": 1.0,
                "52": 0.5,
                "53": 0.0,
                "54": 0.0,
                "55": 0.0,
                "56": 0.0,
                "57": 0.0,
                "58": 0.0,
                "59": 0.0,
                "60": 0.0,
                "61": 0.30000000000000004,
                "62": 0.0,
                "63": 0.0,
                "64": 0.0,
                "65": 0.0,
                "66": 0.0,
                "67": 0.0,
                "68": 0.0,
                "69": 0.0,
                "70": 0.7999999999999999,
                "71": 0.0,
                "72": 0.0,
                "73": 0.0,
                "74": 0.0,
                "75": 0.5999999999999999,
                "76": 0.0,
                "77": 0.0,
                "78": 0.0,
                "79": 0.0,
                "80": 0.0,
                "81": 0.20000000000000007,
                "82": 0.0,
                "83": 0.0,
                "84": 0.0,
                "85": 0.0,
                "86": 0.0,
                "87": 0.0,
                "88": 0.0,
                "89": 0.0,
                "90": 0.0,
                "91": 0.0,
                "92": 0.0,
                "93": 0.0,
                "94": 0.0,
                "95": 0.0,
                "96": 0.7,
                "97": 0.0,
                "98": 0.0,
                "99": 0.0,
                "100": 0.0,
                "101": 0.0,
                "102": 0.09999999999999998,
                "103": 0.0,
                "104": 0.0,
                "105": 0.0,
                "106": 0.0,
                "107": 0.0,
                "108": 0.0,
                "109": 0.0,
                "110": 0.0
            },
            "pass@5": {
                "0": 0.0,
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 1.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0,
                "16": 0.0,
                "17": 0.0,
                "18": 0.0,
                "19": 0.0,
                "20": 0.0,
                "21": 0.0,
                "22": 0.0,
                "23": 0.7777777777777778,
                "24": 0.0,
                "25": 0.0,
                "26": 0.0,
                "27": 0.0,
                "28": 1.0,
                "29": 0.0,
                "30": 0.0,
                "31": 0.0,
                "32": 0.0,
                "33": 0.0,
                "34": 0.0,
                "35": 0.0,
                "36": 0.0,
                "37": 0.9166666666666666,
                "38": 0.0,
                "39": 0.0,
                "40": 0.0,
                "41": 0.0,
                "42": 0.0,
                "43": 0.0,
                "44": 0.0,
                "45": 0.9166666666666666,
                "46": 0.0,
                "47": 0.0,
                "48": 0.0,
                "49": 0.0,
                "50": 1.0,
                "51": 1.0,
                "52": 0.996031746031746,
                "53": 0.0,
                "54": 0.0,
                "55": 0.0,
                "56": 0.0,
                "57": 0.0,
                "58": 0.0,
                "59": 0.0,
                "60": 0.0,
                "61": 0.9166666666666666,
                "62": 0.0,
                "63": 0.0,
                "64": 0.0,
                "65": 0.0,
                "66": 0.0,
                "67": 0.0,
                "68": 0.0,
                "69": 0.0,
                "70": 1.0,
                "71": 0.0,
                "72": 0.0,
                "73": 0.0,
                "74": 0.0,
                "75": 1.0,
                "76": 0.0,
                "77": 0.0,
                "78": 0.0,
                "79": 0.0,
                "80": 0.0,
                "81": 0.7777777777777778,
                "82": 0.0,
                "83": 0.0,
                "84": 0.0,
                "85": 0.0,
                "86": 0.0,
                "87": 0.0,
                "88": 0.0,
                "89": 0.0,
                "90": 0.0,
                "91": 0.0,
                "92": 0.0,
                "93": 0.0,
                "94": 0.0,
                "95": 0.0,
                "96": 1.0,
                "97": 0.0,
                "98": 0.0,
                "99": 0.0,
                "100": 0.0,
                "101": 0.0,
                "102": 0.5,
                "103": 0.0,
                "104": 0.0,
                "105": 0.0,
                "106": 0.0,
                "107": 0.0,
                "108": 0.0,
                "109": 0.0,
                "110": 0.0
            },
            "pass@10": {
                "0": 0.0,
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 0.0,
                "10": 0.0,
                "11": 0.0,
                "12": 1.0,
                "13": 0.0,
                "14": 0.0,
                "15": 0.0,
                "16": 0.0,
                "17": 0.0,
                "18": 0.0,
                "19": 0.0,
                "20": 0.0,
                "21": 0.0,
                "22": 0.0,
                "23": 1.0,
                "24": 0.0,
                "25": 0.0,
                "26": 0.0,
                "27": 0.0,
                "28": 1.0,
                "29": 0.0,
                "30": 0.0,
                "31": 0.0,
                "32": 0.0,
                "33": 0.0,
                "34": 0.0,
                "35": 0.0,
                "36": 0.0,
                "37": 1.0,
                "38": 0.0,
                "39": 0.0,
                "40": 0.0,
                "41": 0.0,
                "42": 0.0,
                "43": 0.0,
                "44": 0.0,
                "45": 1.0,
                "46": 0.0,
                "47": 0.0,
                "48": 0.0,
                "49": 0.0,
                "50": 1.0,
                "51": 1.0,
                "52": 1.0,
                "53": 0.0,
                "54": 0.0,
                "55": 0.0,
                "56": 0.0,
                "57": 0.0,
                "58": 0.0,
                "59": 0.0,
                "60": 0.0,
                "61": 1.0,
                "62": 0.0,
                "63": 0.0,
                "64": 0.0,
                "65": 0.0,
                "66": 0.0,
                "67": 0.0,
                "68": 0.0,
                "69": 0.0,
                "70": 1.0,
                "71": 0.0,
                "72": 0.0,
                "73": 0.0,
                "74": 0.0,
                "75": 1.0,
                "76": 0.0,
                "77": 0.0,
                "78": 0.0,
                "79": 0.0,
                "80": 0.0,
                "81": 1.0,
                "82": 0.0,
                "83": 0.0,
                "84": 0.0,
                "85": 0.0,
                "86": 0.0,
                "87": 0.0,
                "88": 0.0,
                "89": 0.0,
                "90": 0.0,
                "91": 0.0,
                "92": 0.0,
                "93": 0.0,
                "94": 0.0,
                "95": 0.0,
                "96": 1.0,
                "97": 0.0,
                "98": 0.0,
                "99": 0.0,
                "100": 0.0,
                "101": 0.0,
                "102": 1.0,
                "103": 0.0,
                "104": 0.0,
                "105": 0.0,
                "106": 0.0,
                "107": 0.0,
                "108": 0.0,
                "109": 0.0,
                "110": 0.0
            }
        }
    },
    {
        "0": [
            [
                -1
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -1
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "1": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "2": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "3": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -2
            ]
        ],
        "4": [
            [
                true,
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                false
            ]
        ],
        "5": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -1
            ]
        ],
        "6": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                -1
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                -1
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                -1
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                -1
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                -1
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                -1
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                -1
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                -1
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                -1
            ]
        ],
        "7": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "8": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "9": [
            [
                -1
            ],
            [
                false
            ],
            [
                -1
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -1
            ],
            [
                -1
            ],
            [
                -1
            ],
            [
                false
            ]
        ],
        "10": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "11": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "12": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "13": [
            [
                -1
            ],
            [
                -1
            ],
            [
                -1
            ],
            [
                true,
                false
            ],
            [
                -1
            ],
            [
                -1
            ],
            [
                -1
            ],
            [
                -1
            ],
            [
                false
            ],
            [
                -1
            ]
        ],
        "14": [
            [
                true,
                true,
                true,
                false
            ],
            [
                -1
            ],
            [
                false
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                false
            ],
            [
                -1
            ],
            [
                false
            ],
            [
                -1
            ],
            [
                false
            ]
        ],
        "15": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "16": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -1
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "17": [
            [
                -1
            ],
            [
                false
            ],
            [
                -1
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -1
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "18": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ]
        ],
        "19": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -1
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -1
            ],
            [
                false
            ]
        ],
        "20": [
            [
                -1
            ],
            [
                -1
            ],
            [
                false
            ],
            [
                -1
            ],
            [
                -1
            ],
            [
                -1
            ],
            [
                -1
            ],
            [
                -1
            ],
            [
                -1
            ],
            [
                -1
            ]
        ],
        "21": [
            [
                true,
                false
            ],
            [
                -1
            ],
            [
                -1
            ],
            [
                -1
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                -1
            ],
            [
                true,
                false
            ],
            [
                -1
            ],
            [
                -1
            ]
        ],
        "22": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "23": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "24": [
            [
                -1
            ],
            [
                -1
            ],
            [
                true,
                false
            ],
            [
                -1
            ],
            [
                -1
            ],
            [
                -1
            ],
            [
                -1
            ],
            [
                -1
            ],
            [
                -1
            ],
            [
                false
            ]
        ],
        "25": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "26": [
            [
                false
            ],
            [
                true,
                -1
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                -1
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "27": [
            [
                false
            ],
            [
                -1
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "28": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "29": [
            [
                true,
                true,
                -1
            ],
            [
                true,
                true,
                -1
            ],
            [
                -1
            ],
            [
                true,
                true,
                -1
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                -1
            ],
            [
                true,
                true,
                -1
            ],
            [
                true,
                true,
                -1
            ],
            [
                -1
            ]
        ],
        "30": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "31": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "32": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "33": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -2
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "34": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -1
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                -1
            ],
            [
                false
            ]
        ],
        "35": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "36": [
            [
                false
            ],
            [
                -2
            ],
            [
                -1
            ],
            [
                -1
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -1
            ],
            [
                false
            ]
        ],
        "37": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "38": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "39": [
            [
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                -1
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "40": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -1
            ],
            [
                false
            ],
            [
                -1
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "41": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "42": [
            [
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "43": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "44": [
            [
                false
            ],
            [
                -2
            ],
            [
                -1
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -2
            ],
            [
                false
            ],
            [
                -1
            ],
            [
                false
            ],
            [
                -1
            ]
        ],
        "45": [
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "46": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -1
            ],
            [
                false
            ]
        ],
        "47": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "48": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "49": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "50": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "51": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "52": [
            [
                true,
                -1
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                -1
            ],
            [
                true,
                -1
            ],
            [
                true,
                -1
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                -1
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "53": [
            [
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ]
        ],
        "54": [
            [
                true,
                true,
                false
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                false
            ],
            [
                -2
            ],
            [
                true,
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "55": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -2
            ]
        ],
        "56": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                false
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -1
            ]
        ],
        "57": [
            [
                -1
            ],
            [
                -1
            ],
            [
                -1
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -1
            ],
            [
                -2
            ],
            [
                -1
            ],
            [
                -1
            ],
            [
                -1
            ]
        ],
        "58": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "59": [
            [
                true,
                false
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                false
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                false
            ]
        ],
        "60": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "61": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ]
        ],
        "62": [
            [
                -1
            ],
            [
                true,
                false
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -1
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -1
            ],
            [
                -2
            ]
        ],
        "63": [
            [
                false
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                false
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "64": [
            [
                -1
            ],
            [
                -1
            ],
            [
                -1
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -2
            ],
            [
                -1
            ],
            [
                -2
            ]
        ],
        "65": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -1
            ]
        ],
        "66": [
            [
                false
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -2
            ],
            [
                false
            ]
        ],
        "67": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "68": [
            [
                -1
            ],
            [
                -1
            ],
            [
                -2
            ],
            [
                -1
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                false
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "69": [
            [
                -2
            ],
            [
                false
            ],
            [
                -2
            ],
            [
                false
            ],
            [
                -2
            ],
            [
                -1
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "70": [
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "71": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -1
            ],
            [
                false
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "72": [
            [
                -2
            ],
            [
                -2
            ],
            [
                false
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -1
            ],
            [
                -2
            ],
            [
                -1
            ]
        ],
        "73": [
            [
                -2
            ],
            [
                false
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -2
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "74": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -1
            ]
        ],
        "75": [
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -1
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "76": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -1
            ],
            [
                -1
            ],
            [
                false
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -1
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "77": [
            [
                -2
            ],
            [
                -2
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                false
            ],
            [
                -2
            ]
        ],
        "78": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                false
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                false
            ],
            [
                -2
            ],
            [
                false
            ]
        ],
        "79": [
            [
                -2
            ],
            [
                -2
            ],
            [
                false
            ],
            [
                -2
            ],
            [
                false
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "80": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -2
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "81": [
            [
                -1
            ],
            [
                false
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -1
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -1
            ]
        ],
        "82": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -1
            ],
            [
                -2
            ],
            [
                true,
                false
            ],
            [
                -1
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "83": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                false
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "84": [
            [
                -1
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "85": [
            [
                -2
            ],
            [
                false
            ],
            [
                -2
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                -2
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "86": [
            [
                -2
            ],
            [
                -2
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -2
            ],
            [
                false
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "87": [
            [
                -2
            ],
            [
                false
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                -1
            ],
            [
                -2
            ],
            [
                true,
                false
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -1
            ]
        ],
        "88": [
            [
                -1
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -1
            ],
            [
                -2
            ],
            [
                false
            ],
            [
                -1
            ],
            [
                -2
            ],
            [
                -1
            ],
            [
                -2
            ]
        ],
        "89": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "90": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -1
            ],
            [
                true,
                false
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                false
            ],
            [
                -2
            ]
        ],
        "91": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -1
            ],
            [
                -2
            ],
            [
                true,
                false
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ]
        ],
        "92": [
            [
                -2
            ],
            [
                false
            ],
            [
                -2
            ],
            [
                -1
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -2
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "93": [
            [
                -1
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                false
            ],
            [
                -2
            ],
            [
                -1
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                false
            ]
        ],
        "94": [
            [
                -2
            ],
            [
                -1
            ],
            [
                -1
            ],
            [
                -1
            ],
            [
                -1
            ],
            [
                -2
            ],
            [
                true,
                true,
                false
            ],
            [
                -2
            ],
            [
                -1
            ],
            [
                -2
            ]
        ],
        "95": [
            [
                -2
            ],
            [
                false
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                false
            ],
            [
                -2
            ],
            [
                -1
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "96": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "97": [
            [
                -1
            ],
            [
                -2
            ],
            [
                -1
            ],
            [
                -2
            ],
            [
                -1
            ],
            [
                -1
            ],
            [
                -1
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "98": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "99": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "100": [
            [
                -1
            ],
            [
                -2
            ],
            [
                -1
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -1
            ],
            [
                -1
            ],
            [
                -2
            ]
        ],
        "101": [
            [
                true,
                false
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                false
            ],
            [
                -1
            ],
            [
                -2
            ],
            [
                -1
            ],
            [
                true,
                false
            ]
        ],
        "102": [
            [
                -1
            ],
            [
                -1
            ],
            [
                -2
            ],
            [
                -1
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -1
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -1
            ],
            [
                -1
            ]
        ],
        "103": [
            [
                false
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                false
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                false
            ]
        ],
        "104": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -1
            ],
            [
                -2
            ],
            [
                false
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "105": [
            [
                false
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -1
            ]
        ],
        "106": [
            [
                -2
            ],
            [
                false
            ],
            [
                -2
            ],
            [
                false
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                false
            ],
            [
                -2
            ],
            [
                false
            ]
        ],
        "107": [
            [
                -2
            ],
            [
                -2
            ],
            [
                false
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                false
            ],
            [
                -2
            ],
            [
                false
            ],
            [
                -2
            ],
            [
                false
            ]
        ],
        "108": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -1
            ],
            [
                -2
            ],
            [
                -1
            ],
            [
                false
            ],
            [
                -1
            ],
            [
                -2
            ],
            [
                -1
            ]
        ],
        "109": [
            [
                false
            ],
            [
                false
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                false
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -2
            ]
        ],
        "110": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -1
            ],
            [
                false
            ],
            [
                -2
            ],
            [
                -2
            ]
        ]
    },
    [
        [
            "{\"error\": \"IndexError('list assignment index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[1, 2, 2, 1, 2, 3, 1]\\n[[1, 2], [3, 3], [4, 2]]\", \"expected\": \"[8, 3, 0]\"}",
            "{\"output\": \"[10, 19, 26]\", \"expected\": \"[8, 3, 0]\", \"inputs\": \"[1, 2, 2, 1, 2, 3, 1]\\n[[1, 2], [3, 3], [4, 2]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"12\", \"expected\": \"[8, 3, 0]\", \"inputs\": \"[1, 2, 2, 1, 2, 3, 1]\\n[[1, 2], [3, 3], [4, 2]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[10, 9, 8]\", \"expected\": \"[8, 3, 0]\", \"inputs\": \"[1, 2, 2, 1, 2, 3, 1]\\n[[1, 2], [3, 3], [4, 2]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1, 2, 4]\", \"expected\": \"[8, 3, 0]\", \"inputs\": \"[1, 2, 2, 1, 2, 3, 1]\\n[[1, 2], [3, 3], [4, 2]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[5, 10, 13]\", \"expected\": \"[8, 3, 0]\", \"inputs\": \"[1, 2, 2, 1, 2, 3, 1]\\n[[1, 2], [3, 3], [4, 2]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list assignment index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[1, 2, 2, 1, 2, 3, 1]\\n[[1, 2], [3, 3], [4, 2]]\", \"expected\": \"[8, 3, 0]\"}",
            "{\"output\": \"[12, 11, 9]\", \"expected\": \"[8, 3, 0]\", \"inputs\": \"[1, 2, 2, 1, 2, 3, 1]\\n[[1, 2], [3, 3], [4, 2]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[10, 9, 9]\", \"expected\": \"[8, 3, 0]\", \"inputs\": \"[1, 2, 2, 1, 2, 3, 1]\\n[[1, 2], [3, 3], [4, 2]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[3, 12, 12]\", \"expected\": \"[8, 3, 0]\", \"inputs\": \"[1, 2, 2, 1, 2, 3, 1]\\n[[1, 2], [3, 3], [4, 2]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"6\", \"expected\": \"22\", \"inputs\": \"[1, 2, 3, -1, 2]\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"expected\": \"22\", \"inputs\": \"[1, 2, 3, -1, 2]\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"expected\": \"22\", \"inputs\": \"[1, 2, 3, -1, 2]\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"expected\": \"22\", \"inputs\": \"[1, 2, 3, -1, 2]\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"expected\": \"22\", \"inputs\": \"[1, 2, 3, -1, 2]\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"expected\": \"22\", \"inputs\": \"[1, 2, 3, -1, 2]\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"expected\": \"22\", \"inputs\": \"[1, 2, 3, -1, 2]\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"expected\": \"22\", \"inputs\": \"[1, 2, 3, -1, 2]\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"expected\": \"22\", \"inputs\": \"[1, 2, 3, -1, 2]\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"expected\": \"22\", \"inputs\": \"[1, 2, 3, -1, 2]\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"92\", \"expected\": \"4\", \"inputs\": \"[1, 2, 3, 4]\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"999999997\", \"expected\": \"4\", \"inputs\": \"[1, 2, 3, 4]\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"expected\": \"4\", \"inputs\": \"[1, 2, 3, 4]\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"999999997\", \"expected\": \"4\", \"inputs\": \"[1, 2, 3, 4]\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"92\", \"expected\": \"4\", \"inputs\": \"[1, 2, 3, 4]\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"999999997\", \"expected\": \"4\", \"inputs\": \"[1, 2, 3, 4]\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"999999997\", \"expected\": \"4\", \"inputs\": \"[1, 2, 3, 4]\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"999999997\", \"expected\": \"4\", \"inputs\": \"[1, 2, 3, 4]\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"999999997\", \"expected\": \"4\", \"inputs\": \"[1, 2, 3, 4]\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"999999997\", \"expected\": \"4\", \"inputs\": \"[1, 2, 3, 4]\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"4\", \"expected\": \"3\", \"inputs\": \"[1, 1, 0, 0, 0, 1, 1, 0, 0, 1]\\n3\\n1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"expected\": \"3\", \"inputs\": \"[1, 1, 0, 0, 0, 1, 1, 0, 0, 1]\\n3\\n1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"expected\": \"3\", \"inputs\": \"[1, 1, 0, 0, 0, 1, 1, 0, 0, 1]\\n3\\n1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"expected\": \"3\", \"inputs\": \"[1, 1, 0, 0, 0, 1, 1, 0, 0, 1]\\n3\\n1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"expected\": \"4\", \"inputs\": \"[0, 0, 0, 0]\\n2\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"expected\": \"3\", \"inputs\": \"[1, 1, 0, 0, 0, 1, 1, 0, 0, 1]\\n3\\n1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"expected\": \"3\", \"inputs\": \"[1, 1, 0, 0, 0, 1, 1, 0, 0, 1]\\n3\\n1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"9\", \"expected\": \"3\", \"inputs\": \"[1, 1, 0, 0, 0, 1, 1, 0, 0, 1]\\n3\\n1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"expected\": \"3\", \"inputs\": \"[1, 1, 0, 0, 0, 1, 1, 0, 0, 1]\\n3\\n1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndentationError('unindent does not match any outer indentation level', ('<string>', 166, 21, '  <|file_separator|>\\\\n', 166, -1))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}"
        ],
        [
            "{\"output\": \"24\", \"expected\": \"355\", \"inputs\": \"31691\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"expected\": \"5\", \"inputs\": \"11\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"24\", \"expected\": \"355\", \"inputs\": \"31691\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"24\", \"expected\": \"355\", \"inputs\": \"31691\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"24\", \"expected\": \"355\", \"inputs\": \"31691\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"24\", \"expected\": \"355\", \"inputs\": \"31691\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"24\", \"expected\": \"355\", \"inputs\": \"31691\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"24\", \"expected\": \"355\", \"inputs\": \"31691\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"24\", \"expected\": \"355\", \"inputs\": \"31691\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"24\", \"expected\": \"355\", \"inputs\": \"31691\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"6\", \"expected\": \"2\", \"inputs\": \"[1, 3, 2]\\n[4, 3, 1, 5, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"expected\": \"2\", \"inputs\": \"[1, 3, 2]\\n[4, 3, 1, 5, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"expected\": \"2\", \"inputs\": \"[1, 3, 2]\\n[4, 3, 1, 5, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"expected\": \"2\", \"inputs\": \"[1, 3, 2]\\n[4, 3, 1, 5, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"expected\": \"4\", \"inputs\": \"[5, 5, 5]\\n[2, 4, 2, 7]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"expected\": \"2\", \"inputs\": \"[1, 3, 2]\\n[4, 3, 1, 5, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"expected\": \"2\", \"inputs\": \"[1, 3, 2]\\n[4, 3, 1, 5, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"expected\": \"2\", \"inputs\": \"[1, 3, 2]\\n[4, 3, 1, 5, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"expected\": \"2\", \"inputs\": \"[1, 3, 2]\\n[4, 3, 1, 5, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[1, 3, 2]\\n[4, 3, 1, 5, 2]\", \"expected\": \"2\"}"
        ],
        [
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"\\\"zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz...(truncated) ...zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\\\"\\n\\\"z\\\"\", \"expected\": \"5000050000\"}",
            "{\"output\": \"3\", \"expected\": \"6\", \"inputs\": \"\\\"abada\\\"\\n\\\"a\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"\\\"zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz...(truncated) ...zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\\\"\\n\\\"z\\\"\", \"expected\": \"5000050000\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"\\\"zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz...(truncated) ...zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\\\"\\n\\\"z\\\"\", \"expected\": \"5000050000\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"\\\"zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz...(truncated) ...zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\\\"\\n\\\"z\\\"\", \"expected\": \"5000050000\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"\\\"zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz...(truncated) ...zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\\\"\\n\\\"z\\\"\", \"expected\": \"5000050000\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"\\\"zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz...(truncated) ...zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\\\"\\n\\\"z\\\"\", \"expected\": \"5000050000\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"\\\"zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz...(truncated) ...zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\\\"\\n\\\"z\\\"\", \"expected\": \"5000050000\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"\\\"zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz...(truncated) ...zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\\\"\\n\\\"z\\\"\", \"expected\": \"5000050000\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"\\\"zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz...(truncated) ...zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\\\"\\n\\\"z\\\"\", \"expected\": \"5000050000\"}"
        ],
        [
            "{\"output\": \"18\", \"expected\": \"12\", \"inputs\": \"[[3, 10], [5, 15], [10, 2], [4, 4]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"18\", \"expected\": \"12\", \"inputs\": \"[[3, 10], [5, 15], [10, 2], [4, 4]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"expected\": \"12\", \"inputs\": \"[[3, 10], [5, 15], [10, 2], [4, 4]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"18\", \"expected\": \"12\", \"inputs\": \"[[3, 10], [5, 15], [10, 2], [4, 4]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"18\", \"expected\": \"12\", \"inputs\": \"[[3, 10], [5, 15], [10, 2], [4, 4]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"expected\": \"12\", \"inputs\": \"[[3, 10], [5, 15], [10, 2], [4, 4]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"18\", \"expected\": \"12\", \"inputs\": \"[[3, 10], [5, 15], [10, 2], [4, 4]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"18\", \"expected\": \"12\", \"inputs\": \"[[3, 10], [5, 15], [10, 2], [4, 4]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"18\", \"expected\": \"12\", \"inputs\": \"[[3, 10], [5, 15], [10, 2], [4, 4]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"18\", \"expected\": \"12\", \"inputs\": \"[[3, 10], [5, 15], [10, 2], [4, 4]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"0\", \"expected\": \"6\", \"inputs\": \"[1, 2, 3]\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"expected\": \"6\", \"inputs\": \"[1, 2, 3]\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"expected\": \"6\", \"inputs\": \"[1, 2, 3]\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"expected\": \"6\", \"inputs\": \"[1, 2, 3]\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"expected\": \"6\", \"inputs\": \"[1, 2, 3]\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"expected\": \"6\", \"inputs\": \"[1, 2, 3]\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"expected\": \"6\", \"inputs\": \"[1, 2, 3]\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"expected\": \"6\", \"inputs\": \"[1, 2, 3]\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"expected\": \"6\", \"inputs\": \"[1, 2, 3]\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"expected\": \"6\", \"inputs\": \"[1, 2, 3]\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"error\": \"TypeError('can only concatenate str (not \\\"int\\\") to str')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"\\\"zbbz\\\"\\n3\", \"expected\": \"\\\"aaaz\\\"\"}",
            "{\"output\": \"\\\"```c\\\"\", \"expected\": \"\\\"aaaz\\\"\", \"inputs\": \"\\\"zbbz\\\"\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TypeError(\\\"can't multiply sequence by non-int of type 'str'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"\\\"zbbz\\\"\\n3\", \"expected\": \"\\\"aaaz\\\"\"}",
            "{\"output\": \"\\\"]^]]\\\"\", \"expected\": \"\\\"aaaz\\\"\", \"inputs\": \"\\\"zbbz\\\"\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"\\\"]^]]\\\"\", \"expected\": \"\\\"aaaz\\\"\", \"inputs\": \"\\\"zbbz\\\"\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"\\\"]^]]\\\"\", \"expected\": \"\\\"aaaz\\\"\", \"inputs\": \"\\\"zbbz\\\"\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TypeError(\\\"can't multiply sequence by non-int of type 'str'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"\\\"zbbz\\\"\\n3\", \"expected\": \"\\\"aaaz\\\"\"}",
            "{\"error\": \"TypeError(\\\"can't multiply sequence by non-int of type 'str'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"\\\"zbbz\\\"\\n3\", \"expected\": \"\\\"aaaz\\\"\"}",
            "{\"error\": \"AttributeError(\\\"'str' object has no attribute 'length'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"\\\"zbbz\\\"\\n3\", \"expected\": \"\\\"aaaz\\\"\"}",
            "{\"output\": \"\\\"]^]]\\\"\", \"expected\": \"\\\"aaaz\\\"\", \"inputs\": \"\\\"zbbz\\\"\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"7\", \"expected\": \"4\", \"inputs\": \"\\\"bcbbbcba\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"expected\": \"4\", \"inputs\": \"\\\"bcbbbcba\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"expected\": \"4\", \"inputs\": \"\\\"bcbbbcba\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"expected\": \"4\", \"inputs\": \"\\\"bcbbbcba\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"expected\": \"4\", \"inputs\": \"\\\"bcbbbcba\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"expected\": \"4\", \"inputs\": \"\\\"bcbbbcba\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"expected\": \"4\", \"inputs\": \"\\\"bcbbbcba\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"expected\": \"4\", \"inputs\": \"\\\"bcbbbcba\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"expected\": \"4\", \"inputs\": \"\\\"bcbbbcba\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"expected\": \"4\", \"inputs\": \"\\\"bcbbbcba\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"3\", \"expected\": \"4\", \"inputs\": \"[1, 2, 3]\\n2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"expected\": \"4\", \"inputs\": \"[1, 2, 3]\\n2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-7\", \"expected\": \"4\", \"inputs\": \"[1, 2, 3]\\n2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"expected\": \"4\", \"inputs\": \"[1, 2, 3]\\n2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-7\", \"expected\": \"4\", \"inputs\": \"[1, 2, 3]\\n2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"expected\": \"4\", \"inputs\": \"[1, 2, 3]\\n2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"expected\": \"4\", \"inputs\": \"[1, 2, 3]\\n2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"expected\": \"4\", \"inputs\": \"[1, 2, 3]\\n2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"expected\": \"4\", \"inputs\": \"[1, 2, 3]\\n2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-7\", \"expected\": \"4\", \"inputs\": \"[1, 2, 3]\\n2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{}",
            "{}",
            "{}",
            "{}",
            "{\"output\": \"true\", \"expected\": \"false\", \"inputs\": \"\\\"abcd\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{}",
            "{}",
            "{}",
            "{\"output\": \"true\", \"expected\": \"false\", \"inputs\": \"\\\"abcd\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"\\\"???\\\"\", \"expected\": \"\\\"abc\\\"\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"\\\"???\\\"\", \"expected\": \"\\\"abc\\\"\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"\\\"???\\\"\", \"expected\": \"\\\"abc\\\"\"}",
            "{\"output\": \"\\\"abad\\\"\", \"expected\": \"\\\"abac\\\"\", \"inputs\": \"\\\"a?a?\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"\\\"???\\\"\", \"expected\": \"\\\"abc\\\"\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"\\\"???\\\"\", \"expected\": \"\\\"abc\\\"\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"\\\"???\\\"\", \"expected\": \"\\\"abc\\\"\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"\\\"???\\\"\", \"expected\": \"\\\"abc\\\"\"}",
            "{\"output\": \"\\\"??????????????????????????\\\"\", \"expected\": \"\\\"abc\\\"\", \"inputs\": \"\\\"???\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"\\\"???\\\"\", \"expected\": \"\\\"abc\\\"\"}"
        ],
        [
            "{\"output\": \"50239\", \"expected\": \"16113\", \"inputs\": \"[1,1,0,1,0,1,0,0,0,0,1,0,1,0,1,0,0,1,0,0,1,0,0,1,0,1,1,1,0,1,0,1,0,0,0,1,1,1,0,0,0,0,1,0,0,1,1,1,0,1,0,1,0,0,1,0,1,0,1,0,1,1,0,1,0,0,0,1,1,0,0,0,0,0,0...(truncated) ...0,0,1,1,1,1,1,1,0,0,1,1,1,1,1,0,0,1,1,1,1,1,0,0,0,1,1,1,0,1,1,1,0,0,0,1,0,1,1,0,1,1,1,1,0,1,1,1,1,0,1,1,0,1,0,0,1,0,0,1,1,1,1,0,0,0,0,1,0,1,1,0,0,0,1]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TypeError(\\\"'bool' object is not iterable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[1, 0, 1, 0]\", \"expected\": \"1\"}",
            "{\"output\": \"3\", \"expected\": \"1\", \"inputs\": \"[1, 0, 1, 0]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 75, 1, '<|file_separator|>\\\\n', 75, 2))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 75, 9, '        <|file_separator|>\\\\n', 75, 10))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"1\", \"expected\": \"3\", \"inputs\": \"[1, 1, 1, 1, 1]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TypeError(\\\"'bool' object is not iterable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[1, 0, 1, 0]\", \"expected\": \"1\"}",
            "{\"output\": \"0\", \"expected\": \"1\", \"inputs\": \"[1, 0, 1, 0]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TypeError(\\\"'bool' object is not iterable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[1, 0, 1, 0]\", \"expected\": \"1\"}",
            "{\"output\": \"2\", \"expected\": \"1\", \"inputs\": \"[1, 0, 1, 0]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"[\\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\"]\", \"expected\": \"[\\\"ab\\\", \\\"\\\", \\\"ba\\\", \\\"\\\"]\", \"inputs\": \"[\\\"cab\\\", \\\"ad\\\", \\\"bad\\\", \\\"c\\\"]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[\\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\"]\", \"expected\": \"[\\\"ab\\\", \\\"\\\", \\\"ba\\\", \\\"\\\"]\", \"inputs\": \"[\\\"cab\\\", \\\"ad\\\", \\\"bad\\\", \\\"c\\\"]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[\\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\"]\", \"expected\": \"[\\\"ab\\\", \\\"\\\", \\\"ba\\\", \\\"\\\"]\", \"inputs\": \"[\\\"cab\\\", \\\"ad\\\", \\\"bad\\\", \\\"c\\\"]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[\\\"a\\\", \\\"a\\\", \\\"a\\\", \\\"\\\"]\", \"expected\": \"[\\\"ab\\\", \\\"\\\", \\\"ba\\\", \\\"\\\"]\", \"inputs\": \"[\\\"cab\\\", \\\"ad\\\", \\\"bad\\\", \\\"c\\\"]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[\\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\"]\", \"expected\": \"[\\\"ab\\\", \\\"\\\", \\\"ba\\\", \\\"\\\"]\", \"inputs\": \"[\\\"cab\\\", \\\"ad\\\", \\\"bad\\\", \\\"c\\\"]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[\\\"cabcab\\\", \\\"adad\\\", \\\"badbad\\\", \\\"cc\\\"]\", \"expected\": \"[\\\"ab\\\", \\\"\\\", \\\"ba\\\", \\\"\\\"]\", \"inputs\": \"[\\\"cab\\\", \\\"ad\\\", \\\"bad\\\", \\\"c\\\"]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[\\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\"]\", \"expected\": \"[\\\"ab\\\", \\\"\\\", \\\"ba\\\", \\\"\\\"]\", \"inputs\": \"[\\\"cab\\\", \\\"ad\\\", \\\"bad\\\", \\\"c\\\"]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[\\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\"]\", \"expected\": \"[\\\"ab\\\", \\\"\\\", \\\"ba\\\", \\\"\\\"]\", \"inputs\": \"[\\\"cab\\\", \\\"ad\\\", \\\"bad\\\", \\\"c\\\"]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[\\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\"]\", \"expected\": \"[\\\"ab\\\", \\\"\\\", \\\"ba\\\", \\\"\\\"]\", \"inputs\": \"[\\\"cab\\\", \\\"ad\\\", \\\"bad\\\", \\\"c\\\"]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[\\\"ca\\\", \\\"ab\\\", \\\"ad\\\", \\\"ba\\\", \\\"ad\\\"]\", \"expected\": \"[\\\"ab\\\", \\\"\\\", \\\"ba\\\", \\\"\\\"]\", \"inputs\": \"[\\\"cab\\\", \\\"ad\\\", \\\"bad\\\", \\\"c\\\"]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"1\", \"expected\": \"3\", \"inputs\": \"\\\"aabcaba\\\"\\n0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"expected\": \"3\", \"inputs\": \"\\\"aabcaba\\\"\\n0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"expected\": \"3\", \"inputs\": \"\\\"aabcaba\\\"\\n0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"ValueError('max() arg is an empty sequence')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"\\\"aabcaba\\\"\\n0\", \"expected\": \"3\"}",
            "{\"output\": \"0\", \"expected\": \"3\", \"inputs\": \"\\\"aabcaba\\\"\\n0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"expected\": \"2\", \"inputs\": \"\\\"dabdcbdcdcd\\\"\\n2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-3\", \"expected\": \"2\", \"inputs\": \"\\\"dabdcbdcdcd\\\"\\n2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"expected\": \"3\", \"inputs\": \"\\\"aabcaba\\\"\\n0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"expected\": \"3\", \"inputs\": \"\\\"aabcaba\\\"\\n0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"expected\": \"3\", \"inputs\": \"\\\"aabcaba\\\"\\n0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: ':'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"\\\"1?:?4\\\"\", \"expected\": \"\\\"11:54\\\"\"}",
            "{\"output\": \"\\\"??\\\"\", \"expected\": \"\\\"11:54\\\"\", \"inputs\": \"\\\"1?:?4\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: ':'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"\\\"1?:?4\\\"\", \"expected\": \"\\\"11:54\\\"\"}",
            "{\"output\": \"\\\"14:04\\\"\", \"expected\": \"\\\"11:54\\\"\", \"inputs\": \"\\\"1?:?4\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"\\\"02:02\\\"\", \"expected\": \"\\\"11:54\\\"\", \"inputs\": \"\\\"1?:?4\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"\\\"15\\\"\", \"expected\": \"\\\"11:54\\\"\", \"inputs\": \"\\\"1?:?4\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"ValueError('Invalid character: 1')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"\\\"1?:?4\\\"\", \"expected\": \"\\\"11:54\\\"\"}",
            "{\"output\": \"\\\"00:05\\\"\", \"expected\": \"\\\"11:54\\\"\", \"inputs\": \"\\\"1?:?4\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"\\\"11:14\\\"\", \"expected\": \"\\\"11:54\\\"\", \"inputs\": \"\\\"1?:?4\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"\\\"\\\"\", \"expected\": \"\\\"11:54\\\"\", \"inputs\": \"\\\"1?:?4\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"3\", \"expected\": \"1\", \"inputs\": \"[1, 2, 3]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"expected\": \"1\", \"inputs\": \"[1, 2, 3]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"expected\": \"1\", \"inputs\": \"[1, 2, 3]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"expected\": \"1\", \"inputs\": \"[1, 2, 3]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"expected\": \"1\", \"inputs\": \"[1, 2, 3]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"expected\": \"1\", \"inputs\": \"[1, 2, 3]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 8]\", \"expected\": \"1\", \"inputs\": \"[1, 2, 3]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"expected\": \"1\", \"inputs\": \"[1, 2, 3]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"expected\": \"1\", \"inputs\": \"[1, 2, 3]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0.5\", \"expected\": \"2\", \"inputs\": \"[3, 4, 3, 4, 5]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"[3, 4, 3, 2]\", \"expected\": \"[3, 3, 2, 2]\", \"inputs\": \"[2, 3, 2, 1]\\n[3, 2, -3, 1]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[0, 0, 0, 0]\", \"expected\": \"[3, 3, 2, 2]\", \"inputs\": \"[2, 3, 2, 1]\\n[3, 2, -3, 1]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[0, 0, 0, 0]\", \"expected\": \"[3, 3, 2, 2]\", \"inputs\": \"[2, 3, 2, 1]\\n[3, 2, -3, 1]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 3, 1]\", \"expected\": \"[3, 3, 2, 2]\", \"inputs\": \"[2, 3, 2, 1]\\n[3, 2, -3, 1]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[2, 3, 2, 1]\\n[3, 2, -3, 1]\", \"expected\": \"[3, 3, 2, 2]\"}",
            "{\"output\": \"[2, 3, 1, 3]\", \"expected\": \"[3, 3, 2, 2]\", \"inputs\": \"[2, 3, 2, 1]\\n[3, 2, -3, 1]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[3, 1, 2]\", \"expected\": \"[3, 3, 2, 2]\", \"inputs\": \"[2, 3, 2, 1]\\n[3, 2, -3, 1]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[3]\", \"expected\": \"[3, 3, 2, 2]\", \"inputs\": \"[2, 3, 2, 1]\\n[3, 2, -3, 1]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[2, 3, 2, 1]\\n[3, 2, -3, 1]\", \"expected\": \"[3, 3, 2, 2]\"}",
            "{\"output\": \"[0, 1, 3, 1]\", \"expected\": \"[3, 3, 2, 2]\", \"inputs\": \"[2, 3, 2, 1]\\n[3, 2, -3, 1]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[1, 4, 3, 3, 2]\\n[0, 3, 3, 2]\", \"expected\": \"12\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[1, 4, 3, 3, 2]\\n[0, 3, 3, 2]\", \"expected\": \"12\"}",
            "{\"output\": \"1\", \"expected\": \"12\", \"inputs\": \"[1, 4, 3, 3, 2]\\n[0, 3, 3, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[1, 4, 3, 3, 2]\\n[0, 3, 3, 2]\", \"expected\": \"12\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[1, 4, 3, 3, 2]\\n[0, 3, 3, 2]\", \"expected\": \"12\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[1, 4, 3, 3, 2]\\n[0, 3, 3, 2]\", \"expected\": \"12\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[1, 4, 3, 3, 2]\\n[0, 3, 3, 2]\", \"expected\": \"12\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[1, 4, 3, 3, 2]\\n[0, 3, 3, 2]\", \"expected\": \"12\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[1, 4, 3, 3, 2]\\n[0, 3, 3, 2]\", \"expected\": \"12\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[1, 4, 3, 3, 2]\\n[0, 3, 3, 2]\", \"expected\": \"12\"}"
        ],
        [
            "{\"output\": \"6\", \"expected\": \"66\", \"inputs\": \"[10, 21, 31]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: ''\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[1, 2, 3]\", \"expected\": \"6\"}",
            "{\"error\": \"TypeError(\\\"unsupported operand type(s) for +=: 'int' and 'str'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[1, 2, 3]\", \"expected\": \"6\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: ''\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[1, 2, 3]\", \"expected\": \"6\"}",
            "{\"output\": \"6\", \"expected\": \"66\", \"inputs\": \"[10, 21, 31]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"expected\": \"66\", \"inputs\": \"[10, 21, 31]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TypeError(\\\"unsupported operand type(s) for +=: 'int' and 'str'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[1, 2, 3]\", \"expected\": \"6\"}",
            "{\"output\": \"6\", \"expected\": \"66\", \"inputs\": \"[10, 21, 31]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: ''\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[1, 2, 3]\", \"expected\": \"6\"}",
            "{\"error\": \"TypeError(\\\"unsupported operand type(s) for +=: 'int' and 'str'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[1, 2, 3]\", \"expected\": \"6\"}"
        ],
        [
            "{\"output\": \"18\", \"expected\": \"9\", \"inputs\": \"18\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"18\", \"expected\": \"9\", \"inputs\": \"18\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"18\", \"expected\": \"9\", \"inputs\": \"18\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"18\", \"expected\": \"9\", \"inputs\": \"18\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"18\", \"expected\": \"9\", \"inputs\": \"18\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"18\", \"expected\": \"9\", \"inputs\": \"18\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"18\", \"expected\": \"9\", \"inputs\": \"18\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"expected\": \"17\", \"inputs\": \"935\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"18\", \"expected\": \"9\", \"inputs\": \"18\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"18\", \"expected\": \"9\", \"inputs\": \"18\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"4\", \"expected\": \"2\", \"inputs\": \"[1, 4, 3, 3, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"expected\": \"2\", \"inputs\": \"[1, 4, 3, 3, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"expected\": \"2\", \"inputs\": \"[1, 4, 3, 3, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"expected\": \"2\", \"inputs\": \"[1, 4, 3, 3, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"expected\": \"3\", \"inputs\": \"[3, 2, 1]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{}",
            "{\"output\": \"4\", \"expected\": \"2\", \"inputs\": \"[1, 4, 3, 3, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"expected\": \"3\", \"inputs\": \"[15, 33, 36, 2, 50, 13, 19]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"18\", \"expected\": \"4\", \"inputs\": \"[16, 42, 2, 42, 46, 14, 10, 20, 23, 5, 18, 44, 5, 23, 10, 41, 50, 3, 32, 4, 33, 32, 26, 5, 25, 11, 18, 39, 48, 4, 3, 17]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[4, 2, 9, 5, 3]\", \"expected\": \"3\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[4, 2, 9, 5, 3]\", \"expected\": \"3\"}",
            "{\"output\": \"-1\", \"expected\": \"0\", \"inputs\": \"[4, 8, 2, 8]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[4, 2, 9, 5, 3]\", \"expected\": \"3\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[4, 2, 9, 5, 3]\", \"expected\": \"3\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[4, 2, 9, 5, 3]\", \"expected\": \"3\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[4, 2, 9, 5, 3]\", \"expected\": \"3\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[4, 2, 9, 5, 3]\", \"expected\": \"3\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[4, 2, 9, 5, 3]\", \"expected\": \"3\"}",
            "{\"output\": \"7\", \"expected\": \"3\", \"inputs\": \"[4, 2, 9, 5, 3]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"1\", \"expected\": \"5\", \"inputs\": \"[0, 1, 1, 1]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"expected\": \"5\", \"inputs\": \"[0, 1, 1, 1]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"expected\": \"5\", \"inputs\": \"[0, 1, 1, 1]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"expected\": \"5\", \"inputs\": \"[0, 1, 1, 1]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"expected\": \"5\", \"inputs\": \"[0, 1, 1, 1]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"expected\": \"5\", \"inputs\": \"[0, 1, 1, 1]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"expected\": \"5\", \"inputs\": \"[0, 1, 1, 1]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"expected\": \"5\", \"inputs\": \"[0, 1, 1, 1]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"expected\": \"5\", \"inputs\": \"[0, 1, 1, 1]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"expected\": \"5\", \"inputs\": \"[0, 1, 1, 1]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"6\", \"expected\": \"9\", \"inputs\": \"[3, 6, 9]\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[5, 2]\\n7\", \"expected\": \"12\"}",
            "{\"output\": \"6\", \"expected\": \"9\", \"inputs\": \"[3, 6, 9]\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"expected\": \"9\", \"inputs\": \"[3, 6, 9]\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[5, 2]\\n7\", \"expected\": \"12\"}",
            "{\"output\": \"6\", \"expected\": \"9\", \"inputs\": \"[3, 6, 9]\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"expected\": \"9\", \"inputs\": \"[3, 6, 9]\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"expected\": \"9\", \"inputs\": \"[3, 6, 9]\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"expected\": \"9\", \"inputs\": \"[3, 6, 9]\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"expected\": \"9\", \"inputs\": \"[3, 6, 9]\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"[0, 0]\", \"expected\": \"[1, 1, 1]\", \"inputs\": \"[\\\"abcd\\\", \\\"bcd\\\", \\\"xbcd\\\"]\\n[\\\"cd\\\", \\\"bcd\\\", \\\"xyz\\\"]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"NameError(\\\"name 'Trie' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[\\\"abcd\\\", \\\"bcd\\\", \\\"xbcd\\\"]\\n[\\\"cd\\\", \\\"bcd\\\", \\\"xyz\\\"]\", \"expected\": \"[1, 1, 1]\"}",
            "{\"output\": \"[0, 0]\", \"expected\": \"[1, 1, 1]\", \"inputs\": \"[\\\"abcd\\\", \\\"bcd\\\", \\\"xbcd\\\"]\\n[\\\"cd\\\", \\\"bcd\\\", \\\"xyz\\\"]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[0, 0]\", \"expected\": \"[1, 1, 1]\", \"inputs\": \"[\\\"abcd\\\", \\\"bcd\\\", \\\"xbcd\\\"]\\n[\\\"cd\\\", \\\"bcd\\\", \\\"xyz\\\"]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[0, 0, -1]\", \"expected\": \"[1, 1, 1]\", \"inputs\": \"[\\\"abcd\\\", \\\"bcd\\\", \\\"xbcd\\\"]\\n[\\\"cd\\\", \\\"bcd\\\", \\\"xyz\\\"]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[0, 0]\", \"expected\": \"[1, 1, 1]\", \"inputs\": \"[\\\"abcd\\\", \\\"bcd\\\", \\\"xbcd\\\"]\\n[\\\"cd\\\", \\\"bcd\\\", \\\"xyz\\\"]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[]\", \"expected\": \"[1, 1, 1]\", \"inputs\": \"[\\\"abcd\\\", \\\"bcd\\\", \\\"xbcd\\\"]\\n[\\\"cd\\\", \\\"bcd\\\", \\\"xyz\\\"]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[0]\", \"expected\": \"[1, 1, 1]\", \"inputs\": \"[\\\"abcd\\\", \\\"bcd\\\", \\\"xbcd\\\"]\\n[\\\"cd\\\", \\\"bcd\\\", \\\"xyz\\\"]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[0, 0]\", \"expected\": \"[1, 1, 1]\", \"inputs\": \"[\\\"abcd\\\", \\\"bcd\\\", \\\"xbcd\\\"]\\n[\\\"cd\\\", \\\"bcd\\\", \\\"xyz\\\"]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[0, 0]\", \"expected\": \"[1, 1, 1]\", \"inputs\": \"[\\\"abcd\\\", \\\"bcd\\\", \\\"xbcd\\\"]\\n[\\\"cd\\\", \\\"bcd\\\", \\\"xyz\\\"]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{}",
            "{}",
            "{}",
            "{}",
            "{}",
            "{}",
            "{}",
            "{}",
            "{}",
            "{}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[1, 2]\\n0\", \"expected\": \"1\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[1, 2]\\n0\", \"expected\": \"1\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[1, 2, 3]\\n2\", \"expected\": \"1\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[1, 2]\\n0\", \"expected\": \"1\"}",
            "{\"output\": \"2\", \"expected\": \"-1\", \"inputs\": \"[24,14,10,4,24,1,2,11,5,1,24,12,3,2,7,11,4,17,16,7,12,3,17,4,1,7,2,11,15,4,11,1,6,16,2,22,7,9,16,19,20,23,4,22,6,4,12,8,20,18]\\n37\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"expected\": \"-1\", \"inputs\": \"[24,14,10,4,24,1,2,11,5,1,24,12,3,2,7,11,4,17,16,7,12,3,17,4,1,7,2,11,15,4,11,1,6,16,2,22,7,9,16,19,20,23,4,22,6,4,12,8,20,18]\\n37\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[1, 2, 3]\\n2\", \"expected\": \"1\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[1, 2]\\n0\", \"expected\": \"1\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[1, 2]\\n0\", \"expected\": \"1\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[1, 2, 3]\\n2\", \"expected\": \"1\"}"
        ],
        [
            "{\"output\": \"1\", \"expected\": \"6\", \"inputs\": \"[1, 4, 3, 3, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"expected\": \"6\", \"inputs\": \"[1, 4, 3, 3, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"expected\": \"6\", \"inputs\": \"[1, 4, 3, 3, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"expected\": \"6\", \"inputs\": \"[1, 4, 3, 3, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"expected\": \"6\", \"inputs\": \"[1, 4, 3, 3, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"expected\": \"6\", \"inputs\": \"[1, 4, 3, 3, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"expected\": \"6\", \"inputs\": \"[1, 4, 3, 3, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"expected\": \"6\", \"inputs\": \"[1, 4, 3, 3, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"expected\": \"6\", \"inputs\": \"[1, 4, 3, 3, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"expected\": \"6\", \"inputs\": \"[1, 4, 3, 3, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"7\", \"expected\": \"3\", \"inputs\": \"[5, 2, -10, -5, 1]\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"15\", \"expected\": \"3\", \"inputs\": \"[5, 2, -10, -5, 1]\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"10\", \"expected\": \"3\", \"inputs\": \"[5, 2, -10, -5, 1]\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"13\", \"expected\": \"3\", \"inputs\": \"[5, 2, -10, -5, 1]\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"15\", \"expected\": \"3\", \"inputs\": \"[5, 2, -10, -5, 1]\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"15\", \"expected\": \"3\", \"inputs\": \"[5, 2, -10, -5, 1]\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"expected\": \"3\", \"inputs\": \"[5, 2, -10, -5, 1]\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-8\", \"expected\": \"3\", \"inputs\": \"[5, 2, -10, -5, 1]\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"expected\": \"3\", \"inputs\": \"[5, 2, -10, -5, 1]\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"15\", \"expected\": \"3\", \"inputs\": \"[5, 2, -10, -5, 1]\\n3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"0\", \"expected\": \"1\", \"inputs\": \"\\\"leetcodeleet\\\"\\n4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"expected\": \"1\", \"inputs\": \"\\\"leetcodeleet\\\"\\n4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"expected\": \"1\", \"inputs\": \"\\\"leetcodeleet\\\"\\n4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"expected\": \"1\", \"inputs\": \"\\\"leetcodeleet\\\"\\n4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"expected\": \"1\", \"inputs\": \"\\\"leetcodeleet\\\"\\n4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"expected\": \"1\", \"inputs\": \"\\\"leetcodeleet\\\"\\n4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"expected\": \"1\", \"inputs\": \"\\\"leetcodeleet\\\"\\n4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"expected\": \"1\", \"inputs\": \"\\\"leetcodeleet\\\"\\n4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"expected\": \"1\", \"inputs\": \"\\\"leetcodeleet\\\"\\n4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"expected\": \"1\", \"inputs\": \"\\\"leetcodeleet\\\"\\n4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"7\", \"expected\": \"2\", \"inputs\": \"[2, 5, 6, 8, 5]\\n4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"expected\": \"2\", \"inputs\": \"[2, 5, 6, 8, 5]\\n4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"expected\": \"2\", \"inputs\": \"[2, 5, 6, 8, 5]\\n4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 51, 1, '<|file_separator|>\\\\n', 51, 2))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"7\", \"expected\": \"2\", \"inputs\": \"[2, 5, 6, 8, 5]\\n4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"expected\": \"2\", \"inputs\": \"[2, 5, 6, 8, 5]\\n4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"expected\": \"2\", \"inputs\": \"[2, 5, 6, 8, 5]\\n4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"43\", \"expected\": \"2\", \"inputs\": \"[2, 5, 6, 8, 5]\\n4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"expected\": \"2\", \"inputs\": \"[2, 5, 6, 8, 5]\\n4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"expected\": \"2\", \"inputs\": \"[2, 5, 6, 8, 5]\\n4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"0\", \"expected\": \"2\", \"inputs\": \"[[0, 1, 0], [0, 1, 1], [0, 1, 0]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"expected\": \"2\", \"inputs\": \"[[0, 1, 0], [0, 1, 1], [0, 1, 0]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"expected\": \"2\", \"inputs\": \"[[0, 1, 0], [0, 1, 1], [0, 1, 0]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"expected\": \"2\", \"inputs\": \"[[0, 1, 0], [0, 1, 1], [0, 1, 0]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"KeyError(0)\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[0, 1, 0], [0, 1, 1], [0, 1, 0]]\", \"expected\": \"2\"}",
            "{\"output\": \"0\", \"expected\": \"2\", \"inputs\": \"[[0, 1, 0], [0, 1, 1], [0, 1, 0]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"expected\": \"2\", \"inputs\": \"[[0, 1, 0], [0, 1, 1], [0, 1, 0]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"expected\": \"2\", \"inputs\": \"[[0, 1, 0], [0, 1, 1], [0, 1, 0]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[[1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1...(truncated) ...1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0]]\", \"expected\": \"29305675228\"}",
            "{\"output\": \"0\", \"expected\": \"2\", \"inputs\": \"[[0, 1, 0], [0, 1, 1], [0, 1, 0]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"4\", \"expected\": \"6\", \"inputs\": \"3\\n4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"expected\": \"6\", \"inputs\": \"3\\n4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"expected\": \"6\", \"inputs\": \"3\\n4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"expected\": \"6\", \"inputs\": \"3\\n4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"expected\": \"6\", \"inputs\": \"3\\n4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"expected\": \"6\", \"inputs\": \"3\\n4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"expected\": \"6\", \"inputs\": \"3\\n4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"expected\": \"6\", \"inputs\": \"3\\n4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"expected\": \"6\", \"inputs\": \"3\\n4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"expected\": \"6\", \"inputs\": \"3\\n4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"1\", \"expected\": \"2\", \"inputs\": \"\\\"abba\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -5, \"error_message\": \"TestRunnerError\"}",
            "{\"error\": \"ZeroDivisionError('integer division or modulo by zero')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"\\\"abba\\\"\", \"expected\": \"2\"}",
            "{\"error\": \"AttributeError(\\\"'Counter' object has no attribute 'issubset'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"\\\"abba\\\"\", \"expected\": \"2\"}",
            "{\"output\": \"1\", \"expected\": \"2\", \"inputs\": \"\\\"abba\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"expected\": \"2\", \"inputs\": \"\\\"abba\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"expected\": \"2\", \"inputs\": \"\\\"abba\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"expected\": \"2\", \"inputs\": \"\\\"abba\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TypeError(\\\"unsupported operand type(s) for %: 'dict' and 'dict'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"\\\"abba\\\"\", \"expected\": \"2\"}",
            "{\"output\": \"4\", \"expected\": \"2\", \"inputs\": \"\\\"abba\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"false\", \"expected\": \"true\", \"inputs\": \"\\\"234Adas\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"false\", \"expected\": \"true\", \"inputs\": \"\\\"234Adas\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"false\", \"expected\": \"true\", \"inputs\": \"\\\"234Adas\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{}",
            "{}",
            "{}",
            "{\"output\": \"false\", \"expected\": \"true\", \"inputs\": \"\\\"234Adas\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"false\", \"expected\": \"true\", \"inputs\": \"\\\"234Adas\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"false\", \"expected\": \"true\", \"inputs\": \"\\\"234Adas\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"false\", \"expected\": \"true\", \"inputs\": \"\\\"234Adas\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"-9\", \"expected\": \"3\", \"inputs\": \"[2, 6, 4]\\n[9, 7, 5]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"expected\": \"3\", \"inputs\": \"[2, 6, 4]\\n[9, 7, 5]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"expected\": \"3\", \"inputs\": \"[2, 6, 4]\\n[9, 7, 5]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-9\", \"expected\": \"3\", \"inputs\": \"[2, 6, 4]\\n[9, 7, 5]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"expected\": \"3\", \"inputs\": \"[2, 6, 4]\\n[9, 7, 5]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-9\", \"expected\": \"3\", \"inputs\": \"[2, 6, 4]\\n[9, 7, 5]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"expected\": \"3\", \"inputs\": \"[2, 6, 4]\\n[9, 7, 5]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-9\", \"expected\": \"3\", \"inputs\": \"[2, 6, 4]\\n[9, 7, 5]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-9\", \"expected\": \"3\", \"inputs\": \"[2, 6, 4]\\n[9, 7, 5]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-9\", \"expected\": \"3\", \"inputs\": \"[2, 6, 4]\\n[9, 7, 5]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"false\", \"expected\": \"true\", \"inputs\": \"[[\\\"B\\\", \\\"W\\\", \\\"B\\\"], [\\\"B\\\", \\\"W\\\", \\\"W\\\"], [\\\"B\\\", \\\"W\\\", \\\"B\\\"]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"true\", \"expected\": \"false\", \"inputs\": \"[[\\\"B\\\", \\\"W\\\", \\\"B\\\"], [\\\"W\\\", \\\"B\\\", \\\"W\\\"], [\\\"B\\\", \\\"W\\\", \\\"B\\\"]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"false\", \"expected\": \"true\", \"inputs\": \"[[\\\"B\\\", \\\"W\\\", \\\"B\\\"], [\\\"B\\\", \\\"W\\\", \\\"W\\\"], [\\\"B\\\", \\\"W\\\", \\\"B\\\"]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"true\", \"expected\": \"false\", \"inputs\": \"[[\\\"B\\\", \\\"W\\\", \\\"B\\\"], [\\\"W\\\", \\\"B\\\", \\\"W\\\"], [\\\"B\\\", \\\"W\\\", \\\"B\\\"]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"true\", \"expected\": \"false\", \"inputs\": \"[[\\\"B\\\", \\\"W\\\", \\\"B\\\"], [\\\"W\\\", \\\"B\\\", \\\"W\\\"], [\\\"B\\\", \\\"W\\\", \\\"B\\\"]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"RuntimeError('dictionary changed size during iteration')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[\\\"B\\\", \\\"W\\\", \\\"B\\\"], [\\\"B\\\", \\\"W\\\", \\\"W\\\"], [\\\"B\\\", \\\"W\\\", \\\"B\\\"]]\", \"expected\": \"true\"}",
            "{\"output\": \"false\", \"expected\": \"true\", \"inputs\": \"[[\\\"B\\\", \\\"W\\\", \\\"B\\\"], [\\\"B\\\", \\\"W\\\", \\\"W\\\"], [\\\"B\\\", \\\"W\\\", \\\"B\\\"]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"false\", \"expected\": \"true\", \"inputs\": \"[[\\\"B\\\", \\\"W\\\", \\\"B\\\"], [\\\"B\\\", \\\"W\\\", \\\"W\\\"], [\\\"B\\\", \\\"W\\\", \\\"B\\\"]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"false\", \"expected\": \"true\", \"inputs\": \"[[\\\"B\\\", \\\"W\\\", \\\"B\\\"], [\\\"B\\\", \\\"W\\\", \\\"W\\\"], [\\\"B\\\", \\\"W\\\", \\\"B\\\"]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"false\", \"expected\": \"true\", \"inputs\": \"[[\\\"B\\\", \\\"W\\\", \\\"B\\\"], [\\\"B\\\", \\\"W\\\", \\\"W\\\"], [\\\"B\\\", \\\"W\\\", \\\"B\\\"]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"NaN\", \"expected\": \"15\", \"inputs\": \"[4, 1]\\n5\\n2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"expected\": \"15\", \"inputs\": \"[4, 1]\\n5\\n2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"expected\": \"15\", \"inputs\": \"[4, 1]\\n5\\n2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"expected\": \"15\", \"inputs\": \"[4, 1]\\n5\\n2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"expected\": \"15\", \"inputs\": \"[4, 1]\\n5\\n2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[4, 1]\\n5\\n2\", \"expected\": \"15\"}",
            "{\"output\": \"3\", \"expected\": \"15\", \"inputs\": \"[4, 1]\\n5\\n2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[4, 1]\\n5\\n2\", \"expected\": \"15\"}",
            "{\"output\": \"1000000004\", \"expected\": \"15\", \"inputs\": \"[4, 1]\\n5\\n2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1000000004\", \"expected\": \"15\", \"inputs\": \"[4, 1]\\n5\\n2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"16\", \"expected\": \"3\", \"inputs\": \"\\\"fabccddg\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"12\", \"expected\": \"3\", \"inputs\": \"\\\"fabccddg\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"12\", \"expected\": \"3\", \"inputs\": \"\\\"fabccddg\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"expected\": \"3\", \"inputs\": \"\\\"fabccddg\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"20\", \"expected\": \"3\", \"inputs\": \"\\\"fabccddg\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"20\", \"expected\": \"3\", \"inputs\": \"\\\"fabccddg\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"expected\": \"3\", \"inputs\": \"\\\"fabccddg\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"12\", \"expected\": \"3\", \"inputs\": \"\\\"fabccddg\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"12\", \"expected\": \"3\", \"inputs\": \"\\\"fabccddg\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"12\", \"expected\": \"3\", \"inputs\": \"\\\"fabccddg\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"0\", \"expected\": \"1\", \"inputs\": \"1\\n2\\n1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"expected\": \"2\", \"inputs\": \"1\\n1\\n2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"expected\": \"2\", \"inputs\": \"1\\n1\\n2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"expected\": \"2\", \"inputs\": \"1\\n1\\n2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"expected\": \"2\", \"inputs\": \"1\\n1\\n2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"8\", \"expected\": \"2\", \"inputs\": \"1\\n1\\n2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"expected\": \"2\", \"inputs\": \"1\\n1\\n2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1000000006\", \"expected\": \"2\", \"inputs\": \"1\\n1\\n2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"expected\": \"2\", \"inputs\": \"1\\n1\\n2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"expected\": \"2\", \"inputs\": \"1\\n1\\n2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"10\", \"expected\": \"3\", \"inputs\": \"\\\"aaAbcBC\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"expected\": \"3\", \"inputs\": \"\\\"aaAbcBC\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"expected\": \"3\", \"inputs\": \"\\\"aaAbcBC\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"11\", \"expected\": \"3\", \"inputs\": \"\\\"aaAbcBC\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"10\", \"expected\": \"3\", \"inputs\": \"\\\"aaAbcBC\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"expected\": \"1\", \"inputs\": \"\\\"abBCab\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"30\", \"expected\": \"3\", \"inputs\": \"\\\"aaAbcBC\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"10\", \"expected\": \"3\", \"inputs\": \"\\\"aaAbcBC\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"expected\": \"3\", \"inputs\": \"\\\"aaAbcBC\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"expected\": \"3\", \"inputs\": \"\\\"aaAbcBC\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"[0]\", \"expected\": \"[4]\", \"inputs\": \"[[1, 3, 7]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndentationError('unindent does not match any outer indentation level', ('<string>', 165, 26, '       <|file_separator|>\\\\n', 165, -1))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[[1, 3, 7]]\", \"expected\": \"[4]\"}",
            "{\"output\": \"[21]\", \"expected\": \"[4]\", \"inputs\": \"[[1, 3, 7]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[35831808]\", \"expected\": \"[4]\", \"inputs\": \"[[1, 3, 7]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 126, 1, '<|file_separator|>\\\\n', 126, 2))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"[1000000006]\", \"expected\": \"[4]\", \"inputs\": \"[[1, 3, 7]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 3, 7]]\", \"expected\": \"[4]\"}",
            "{\"output\": \"[0]\", \"expected\": \"[4]\", \"inputs\": \"[[1, 3, 7]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[[1, 3, 7]]\", \"expected\": \"[4]\"}"
        ],
        [
            "{\"output\": \"3\", \"expected\": \"2\", \"inputs\": \"\\\"abc\\\"\\n\\\"bac\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"expected\": \"2\", \"inputs\": \"\\\"abc\\\"\\n\\\"bac\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{}",
            "{\"output\": \"3\", \"expected\": \"2\", \"inputs\": \"\\\"abc\\\"\\n\\\"bac\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{}",
            "{}",
            "{\"output\": \"3\", \"expected\": \"2\", \"inputs\": \"\\\"abc\\\"\\n\\\"bac\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"expected\": \"2\", \"inputs\": \"\\\"abc\\\"\\n\\\"bac\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"expected\": \"2\", \"inputs\": \"\\\"abc\\\"\\n\\\"bac\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"expected\": \"2\", \"inputs\": \"\\\"abc\\\"\\n\\\"bac\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"1\", \"expected\": \"2\", \"inputs\": \"0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"expected\": \"2\", \"inputs\": \"0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"expected\": \"2\", \"inputs\": \"0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"expected\": \"2\", \"inputs\": \"0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"expected\": \"2\", \"inputs\": \"0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"expected\": \"2\", \"inputs\": \"0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"expected\": \"2\", \"inputs\": \"0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"expected\": \"2\", \"inputs\": \"0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list assignment index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"0\", \"expected\": \"2\"}",
            "{\"output\": \"1\", \"expected\": \"2\", \"inputs\": \"0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"22\", \"expected\": \"4\", \"inputs\": \"[13, 23, 12]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"22\", \"expected\": \"4\", \"inputs\": \"[13, 23, 12]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"22\", \"expected\": \"4\", \"inputs\": \"[13, 23, 12]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"22\", \"expected\": \"4\", \"inputs\": \"[13, 23, 12]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"22\", \"expected\": \"4\", \"inputs\": \"[13, 23, 12]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"22\", \"expected\": \"4\", \"inputs\": \"[13, 23, 12]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"22\", \"expected\": \"4\", \"inputs\": \"[13, 23, 12]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"22\", \"expected\": \"4\", \"inputs\": \"[13, 23, 12]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"10\", \"expected\": \"4\", \"inputs\": \"[13, 23, 12]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"22\", \"expected\": \"4\", \"inputs\": \"[13, 23, 12]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"[2, 2, 2, 2]\", \"expected\": \"[0, -1, 2, -1]\", \"inputs\": \"[1, 3, 1, 7]\\n[1, 3, 2, 4]\\n1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 2, 2, 2]\", \"expected\": \"[0, -1, 2, -1]\", \"inputs\": \"[1, 3, 1, 7]\\n[1, 3, 2, 4]\\n1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 2, 2, 2]\", \"expected\": \"[0, -1, 2, -1]\", \"inputs\": \"[1, 3, 1, 7]\\n[1, 3, 2, 4]\\n1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1, 2, -1, -1]\", \"expected\": \"[0, -1, 2, -1]\", \"inputs\": \"[1, 3, 1, 7]\\n[1, 3, 2, 4]\\n1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 2, 2, 2]\", \"expected\": \"[0, -1, 2, -1]\", \"inputs\": \"[1, 3, 1, 7]\\n[1, 3, 2, 4]\\n1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 2, 2, 2]\", \"expected\": \"[0, -1, 2, -1]\", \"inputs\": \"[1, 3, 1, 7]\\n[1, 3, 2, 4]\\n1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 2, 2, 2]\", \"expected\": \"[0, -1, 2, -1]\", \"inputs\": \"[1, 3, 1, 7]\\n[1, 3, 2, 4]\\n1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 2, 2, 2]\", \"expected\": \"[0, -1, 2, -1]\", \"inputs\": \"[1, 3, 1, 7]\\n[1, 3, 2, 4]\\n1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 2, 2, 2]\", \"expected\": \"[0, -1, 2, -1]\", \"inputs\": \"[1, 3, 1, 7]\\n[1, 3, 2, 4]\\n1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 2, 2, 2]\", \"expected\": \"[0, -1, 2, -1]\", \"inputs\": \"[1, 3, 1, 7]\\n[1, 3, 2, 4]\\n1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"0\", \"expected\": \"21\", \"inputs\": \"[3, 5, 9]\\n[[1, -2], [0, -3]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"expected\": \"21\", \"inputs\": \"[3, 5, 9]\\n[[1, -2], [0, -3]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"expected\": \"21\", \"inputs\": \"[3, 5, 9]\\n[[1, -2], [0, -3]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"expected\": \"21\", \"inputs\": \"[3, 5, 9]\\n[[1, -2], [0, -3]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"expected\": \"21\", \"inputs\": \"[3, 5, 9]\\n[[1, -2], [0, -3]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"expected\": \"21\", \"inputs\": \"[3, 5, 9]\\n[[1, -2], [0, -3]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"expected\": \"21\", \"inputs\": \"[3, 5, 9]\\n[[1, -2], [0, -3]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"expected\": \"21\", \"inputs\": \"[3, 5, 9]\\n[[1, -2], [0, -3]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"expected\": \"21\", \"inputs\": \"[3, 5, 9]\\n[[1, -2], [0, -3]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"9\", \"expected\": \"21\", \"inputs\": \"[3, 5, 9]\\n[[1, -2], [0, -3]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{}",
            "{}",
            "{\"output\": \"0\", \"expected\": \"1\", \"inputs\": \"[1, 2, 1, 3]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{}",
            "{}",
            "{}",
            "{\"output\": \"0\", \"expected\": \"1\", \"inputs\": \"[1, 2, 1, 3]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{}",
            "{}",
            "{}"
        ],
        [
            "{}",
            "{}",
            "{}",
            "{}",
            "{}",
            "{}",
            "{}",
            "{}",
            "{}",
            "{}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[1, 2, 4, 12]\\n[2, 4]\\n3\", \"expected\": \"2\"}",
            "{}",
            "{}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[1, 2, 4, 12]\\n[2, 4]\\n3\", \"expected\": \"2\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[1, 2, 4, 12]\\n[2, 4]\\n3\", \"expected\": \"2\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[1, 2, 4, 12]\\n[2, 4]\\n3\", \"expected\": \"2\"}",
            "{}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[1, 2, 4, 12]\\n[2, 4]\\n3\", \"expected\": \"2\"}",
            "{}",
            "{}"
        ],
        [
            "{\"output\": \"\\\"2a2b2c2d2e\\\"\", \"expected\": \"\\\"1a1b1c1d1e\\\"\", \"inputs\": \"\\\"abcde\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"\\\"14a2b\\\"\", \"expected\": \"\\\"9a5a2b\\\"\", \"inputs\": \"\\\"aaaaaaaaaaaaaabb\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"\\\"2a2b2c2d1e\\\"\", \"expected\": \"\\\"1a1b1c1d1e\\\"\", \"inputs\": \"\\\"abcde\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"\\\"14a2b\\\"\", \"expected\": \"\\\"9a5a2b\\\"\", \"inputs\": \"\\\"aaaaaaaaaaaaaabb\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"\\\"14a2b\\\"\", \"expected\": \"\\\"9a5a2b\\\"\", \"inputs\": \"\\\"aaaaaaaaaaaaaabb\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"\\\"14a2b\\\"\", \"expected\": \"\\\"9a5a2b\\\"\", \"inputs\": \"\\\"aaaaaaaaaaaaaabb\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"\\\"14a2b\\\"\", \"expected\": \"\\\"9a5a2b\\\"\", \"inputs\": \"\\\"aaaaaaaaaaaaaabb\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"\\\"14a2b\\\"\", \"expected\": \"\\\"9a5a2b\\\"\", \"inputs\": \"\\\"aaaaaaaaaaaaaabb\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"\\\"14a2b\\\"\", \"expected\": \"\\\"9a5a2b\\\"\", \"inputs\": \"\\\"aaaaaaaaaaaaaabb\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"\\\"14a2b\\\"\", \"expected\": \"\\\"9a5a2b\\\"\", \"inputs\": \"\\\"aaaaaaaaaaaaaabb\\\"\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"\\n\", \"expected\": \"xyz\\n\", \"inputs\": \"||xyz\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 58, 2, '\\\\t<|file_separator|>\\\\n', 58, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 58, 2, '\\\\t<|file_separator|>\\\\n', 58, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 58, 2, '\\\\t<|file_separator|>\\\\n', 58, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"\\n\", \"expected\": \"xyz\\n\", \"inputs\": \"||xyz\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 58, 2, '\\\\t<|file_separator|>\\\\n', 58, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"atcodercontest\\n\\n\\n\", \"expected\": \"\\n\", \"inputs\": \"|spoiler|\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"\\n\", \"expected\": \"xyz\\n\", \"inputs\": \"||xyz\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 59, 2, '\\\\t<|file_separator|>\\\\n', 59, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 62, 2, '\\\\t<|file_separator|>\\\\n', 62, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}"
        ],
        [
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 55, 2, '\\\\t<|file_separator|>\\\\n', 55, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 54, 2, '\\\\t<|file_separator|>\\\\n', 54, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 51, 2, '\\\\t<|file_separator|>\\\\n', 51, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 54, 2, '\\\\t<|file_separator|>\\\\n', 54, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 53, 2, '\\\\t<|file_separator|>\\\\n', 53, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 54, 2, '\\\\t<|file_separator|>\\\\n', 54, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 53, 2, '\\\\t<|file_separator|>\\\\n', 53, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"1\\n2\\n3\\n\", \"expected\": \"0\\n1\\n2\\n3\\n\", \"inputs\": \"3\\n2\\n1\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\\n2\\n3\\n\", \"expected\": \"0\\n1\\n2\\n3\\n\", \"inputs\": \"3\\n2\\n1\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 55, 2, '\\\\t<|file_separator|>\\\\n', 55, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}"
        ],
        [
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 65, 2, '\\\\t<|file_separator|>\\\\n', 65, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 67, 2, '\\\\t<|file_separator|>\\\\n', 67, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 60, 2, '\\\\t<|file_separator|>\\\\n', 60, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 69, 2, '\\\\t<|file_separator|>\\\\n', 69, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"No\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nN...(truncated) ...\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\n\", \"expected\": \"Yes\\nYes\\nYes\\nYes\\nYes\\nYes\\nYes\\nYes\\nYes\\nYes\\nYes\\nYes\\nYes\\nYes\\nYes\\nYes\\nYes\\nYes\\nYes\\nYes\\nYes\\nYes\\nYes\\nYes\\nYes\\n...(truncated) ...Yes\\nYes\\nYes\\nYes\\nYes\\nYes\\nYes\\nYes\\nYes\\nYes\\nYes\\nYes\\nYes\\nYes\\nYes\\nYes\\nYes\\nYes\\nYes\\nYes\\nYes\\nYes\\nYes\\nYes\\nYes\\n\", \"inputs\": \"100\\n100000000 99999999 99999998 99999997 99999996 99999995 99999994 99999993 99999992 99999991 99999990 99999989 99999988 99999987 99999986 99999985 9...(truncated) ...299800015 299800014 299800013 299800012 299800011 299800010 299800009 299800008 299800007 299800006 299800005 299800004 299800003 299800002 299800001\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 69, 2, '\\\\t<|file_separator|>\\\\n', 69, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 69, 2, '\\\\t<|file_separator|>\\\\n', 69, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 69, 2, '\\\\t<|file_separator|>\\\\n', 69, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 73, 2, '\\\\t<|file_separator|>\\\\n', 73, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"TypeError(\\\"'int' object is not iterable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n1 2 3\\n2\\n2 4\\n6\\n1 2 4 8 16 32\\n4\\n1 5 10 50\\n\", \"expected\": \"No\\nYes\\nYes\\nNo\\n\"}"
        ],
        [
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'abcde'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"abcde\\n3\\n3 ab abc abcd\\n4 f c cd bcde\\n2 e de\\n\", \"expected\": \"2\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'abcde'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"abcde\\n3\\n3 ab abc abcd\\n4 f c cd bcde\\n2 e de\\n\", \"expected\": \"2\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'abcde'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"abcde\\n3\\n3 ab abc abcd\\n4 f c cd bcde\\n2 e de\\n\", \"expected\": \"2\\n\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 75, 2, '\\\\t<|file_separator|>\\\\n', 75, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 77, 2, '\\\\t<|file_separator|>\\\\n', 77, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'abcde'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"abcde\\n3\\n3 ab abc abcd\\n4 f c cd bcde\\n2 e de\\n\", \"expected\": \"2\\n\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 98, 10, '\\\\t        <|file_separator|>\\\\n', 98, 11))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'abcde'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"abcde\\n3\\n3 ab abc abcd\\n4 f c cd bcde\\n2 e de\\n\", \"expected\": \"2\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'abcde'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"abcde\\n3\\n3 ab abc abcd\\n4 f c cd bcde\\n2 e de\\n\", \"expected\": \"2\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'abcde'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"abcde\\n3\\n3 ab abc abcd\\n4 f c cd bcde\\n2 e de\\n\", \"expected\": \"2\\n\"}"
        ],
        [
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 90, 12, '\\\\t        l<|file_separator|>\\\\n', 90, 13))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"IndentationError(\\\"expected an indented block after 'if' statement on line 80\\\", ('<string>', 82, 14, '\\\\t            <|file_separator|>\\\\n', 82, 15))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 111, 2, '\\\\t<|file_separator|>\\\\n', 111, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 90, 8, '\\\\t    l<|file_separator|>\\\\n', 90, 9))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 91, 39, '\\\\t    def process_queries(self, n, q, a<|file_separator|>\\\\n', 91, 40))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"IndentationError(\\\"expected an indented block after 'if' statement on line 73\\\", ('<string>', 75, 14, '\\\\t            <|file_separator|>\\\\n', 75, 15))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"IndentationError('unindent does not match any outer indentation level', ('<string>', 91, 22, '\\\\t  <|file_separator|>\\\\n', 91, -1))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"IndentationError(\\\"expected an indented block after 'else' statement on line 90\\\", ('<string>', 91, 1, '\\\\t<|file_separator|>\\\\n', 91, -1))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 76, 10, '\\\\t        <|file_separator|>\\\\n', 76, 11))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 88, 28, '\\\\t    def __init__(self, typ<|file_separator|>\\\\n', 88, 29))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}"
        ],
        [
            "{\"output\": \"0\\n\", \"expected\": \"-1\\n\", \"inputs\": \"-13\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 48, 2, '\\\\t<|file_separator|>\\\\n', 48, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 50, 2, '\\\\t<|file_separator|>\\\\n', 50, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"12345678912345678\\n\", \"expected\": \"12345678912345679\\n\", \"inputs\": \"123456789123456789\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 49, 2, '\\\\t<|file_separator|>\\\\n', 49, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 50, 2, '\\\\t<|file_separator|>\\\\n', 50, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 45, 2, '\\\\t<|file_separator|>\\\\n', 45, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 50, 2, '\\\\t<|file_separator|>\\\\n', 50, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 44, 2, '\\\\t<|file_separator|>\\\\n', 44, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"12345678912345678\\n\", \"expected\": \"12345678912345679\\n\", \"inputs\": \"123456789123456789\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 66, 24, '\\\\t    if col == grid[0].<|file_separator|>\\\\n', 66, 25))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 86, 10, '\\\\t        <|file_separator|>\\\\n', 86, 11))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 73, 2, '\\\\t<|file_separator|>\\\\n', 73, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError(\\\"expected 'else' after 'if' expression\\\", ('<string>', 90, 31, '\\\\t                grid[i][j] = 1 if A *<|file_separator|>\\\\n', 90, 37))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 72, 2, '\\\\t<|file_separator|>\\\\n', 72, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 84, 2, '\\\\t<|file_separator|>\\\\n', 84, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 68, 31, '\\\\t    for i in range(len(tiles<|file_separator|>\\\\n', 68, 32))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 80, 21, '\\\\t    if is_possible(<|file_separator|>\\\\n', 80, 22))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"IndentationError('unindent does not match any outer indentation level', ('<string>', 100, 21, '\\\\t <|file_separator|>\\\\n', 100, -1))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 83, 20, '\\\\t    grid = [[0 for<|file_separator|>\\\\n', 83, 21))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}"
        ],
        [
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 39, 2, '\\\\t```\\\\n', 39, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 39, 2, '\\\\t```python\\\\n', 39, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 53, 2, '\\\\t<|file_separator|>\\\\n', 53, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{}",
            "{}",
            "{\"output\": \"1 12 24\\n\", \"expected\": \"12 24\\n\", \"inputs\": \"3\\n3 4 6\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 52, 2, '\\\\t<|file_separator|>\\\\n', 52, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 54, 2, '\\\\t<|file_separator|>\\\\n', 54, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 39, 2, '\\\\t```\\\\n', 39, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}"
        ],
        [
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\n\", \"expected\": \"Yes\\n\"}",
            "{\"output\": \"Yes\\n\", \"expected\": \"No\\n\", \"inputs\": \"3 0\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 71, 2, '\\\\t<|file_separator|>\\\\n', 71, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 75, 2, '\\\\t<|file_separator|>\\\\n', 75, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 78, 2, '\\\\t<|file_separator|>\\\\n', 78, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 58, 2, '\\\\t<|file_separator|>\\\\n', 58, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 70, 2, '\\\\t<|file_separator|>\\\\n', 70, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 76, 2, '\\\\t<|file_separator|>\\\\n', 76, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}"
        ],
        [
            "{\"output\": \"40\\n\", \"expected\": \"11\\n\", \"inputs\": \"4 5\\n1 6 3 1\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 67, 2, '\\\\t<|file_separator|>\\\\n', 67, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 62, 2, '\\\\t<|file_separator|>\\\\n', 62, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 48, 2, '\\\\t<|file_separator|>\\\\n', 48, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 63, 2, '\\\\t<|file_separator|>\\\\n', 63, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 55, 2, '\\\\t<|file_separator|>\\\\n', 55, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 47, 2, '\\\\t<|file_separator|>\\\\n', 47, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"7\\n\", \"expected\": \"11\\n\", \"inputs\": \"4 5\\n1 6 3 1\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 58, 2, '\\\\t<|file_separator|>\\\\n', 58, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 47, 2, '\\\\t<|file_separator|>\\\\n', 47, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}"
        ],
        [
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n00011\\n3 9 2 6 4\\n\", \"expected\": \"7\\n\"}",
            "{\"error\": \"IndexError('string index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n00011\\n3 9 2 6 4\\n\", \"expected\": \"7\\n\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n00011\\n3 9 2 6 4\\n\", \"expected\": \"7\\n\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 58, 2, '\\\\t<|file_separator|>\\\\n', 58, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 60, 2, '\\\\t<|file_separator|>\\\\n', 60, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"11\\n\", \"expected\": \"7\\n\", \"inputs\": \"5\\n00011\\n3 9 2 6 4\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\\n\", \"expected\": \"7\\n\", \"inputs\": \"5\\n00011\\n3 9 2 6 4\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 60, 2, '\\\\t<|file_separator|>\\\\n', 60, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n00011\\n3 9 2 6 4\\n\", \"expected\": \"7\\n\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 60, 2, '\\\\t<|file_separator|>\\\\n', 60, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}"
        ],
        [
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 78, 2, '\\\\t<|file_separator|>\\\\n', 78, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 86, 2, '\\\\t<|file_separator|>\\\\n', 86, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 86, 39, '\\\\t    res = count_colors(h, w, m, oper<|file_separator|>\\\\n', 86, 40))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 87, 2, '\\\\t<|file_separator|>\\\\n', 87, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 88, 42, '\\\\t    colors = count_colors(h, w, m, oper<|file_separator|>\\\\n', 88, 43))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 81, 2, '\\\\t<|file_separator|>\\\\n', 81, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 82, 2, '\\\\t<|file_separator|>\\\\n', 82, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 85, 2, '\\\\t<|file_separator|>\\\\n', 85, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 81, 2, '\\\\t<|file_separator|>\\\\n', 81, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '1 2 5'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4 4\\n1 2 5\\n2 4 0\\n1 3 3\\n1 3 2\\n\", \"expected\": \"3\\n0 5\\n2 4\\n5 3\\n\"}"
        ],
        [
            "{\"output\": \"2 6 10\\n\", \"expected\": \"1 3 5\\n\", \"inputs\": \"5 2\\n2 5 6 7 10\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 47, 2, '\\\\t<|file_separator|>\\\\n', 47, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 48, 2, '\\\\t<|file_separator|>\\\\n', 48, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"2 6 10\\n\", \"expected\": \"1 3 5\\n\", \"inputs\": \"5 2\\n2 5 6 7 10\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2 6 10\\n\", \"expected\": \"1 3 5\\n\", \"inputs\": \"5 2\\n2 5 6 7 10\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2 6 10\\n\", \"expected\": \"1 3 5\\n\", \"inputs\": \"5 2\\n2 5 6 7 10\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2 6 10\\n\", \"expected\": \"1 3 5\\n\", \"inputs\": \"5 2\\n2 5 6 7 10\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2 6 10\\n\", \"expected\": \"1 3 5\\n\", \"inputs\": \"5 2\\n2 5 6 7 10\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 47, 2, '\\\\t<|file_separator|>\\\\n', 47, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"2 6 10\\n\", \"expected\": \"1 3 5\\n\", \"inputs\": \"5 2\\n2 5 6 7 10\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"54\\n\", \"expected\": \"5\\n\", \"inputs\": \"yay\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"54\\n\", \"expected\": \"5\\n\", \"inputs\": \"yay\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"54\\n\", \"expected\": \"5\\n\", \"inputs\": \"yay\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"54\\n\", \"expected\": \"5\\n\", \"inputs\": \"yay\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"54\\n\", \"expected\": \"5\\n\", \"inputs\": \"yay\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"54\\n\", \"expected\": \"5\\n\", \"inputs\": \"yay\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"54\\n\", \"expected\": \"5\\n\", \"inputs\": \"yay\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"54\\n\", \"expected\": \"5\\n\", \"inputs\": \"yay\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"54\\n\", \"expected\": \"5\\n\", \"inputs\": \"yay\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"54\\n\", \"expected\": \"5\\n\", \"inputs\": \"yay\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 2 5'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2 5\\n1 2 9\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 2 5'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2 5\\n1 2 9\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 54, 2, '\\\\t<|file_separator|>\\\\n', 54, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 2 5'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2 5\\n1 2 9\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 69, 2, '\\\\t<|file_separator|>\\\\n', 69, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 54, 2, '\\\\t<|file_separator|>\\\\n', 54, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"No\\n\", \"expected\": \"Yes\\n\", \"inputs\": \"3 2 5\\n1 2 9\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 53, 2, '\\\\t<|file_separator|>\\\\n', 53, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 54, 2, '\\\\t<|file_separator|>\\\\n', 54, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 53, 2, '\\\\t<|file_separator|>\\\\n', 53, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}"
        ],
        [
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 63, 2, '\\\\t<|file_separator|>\\\\n', 63, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"1 2 3 \\n\", \"expected\": \"6 2 2\\n\", \"inputs\": \"3 4\\n1 3 3 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 63, 2, '\\\\t<|file_separator|>\\\\n', 63, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"0 1 2 3\\n\", \"expected\": \"6 2 2\\n\", \"inputs\": \"3 4\\n1 3 3 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 63, 2, '\\\\t<|file_separator|>\\\\n', 63, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '1 3 3 2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4\\n1 3 3 2\\n\", \"expected\": \"6 2 2\\n\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 62, 2, '\\\\t<|file_separator|>\\\\n', 62, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 66, 2, '\\\\t<|file_separator|>\\\\n', 66, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 62, 2, '\\\\t<|file_separator|>\\\\n', 62, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 63, 2, '\\\\t<|file_separator|>\\\\n', 63, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}"
        ],
        [
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 55, 2, '\\\\t<|file_separator|>\\\\n', 55, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{}",
            "{}",
            "{}",
            "{}",
            "{}",
            "{}",
            "{}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 55, 2, '\\\\t<|file_separator|>\\\\n', 55, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{}"
        ],
        [
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 59, 2, '\\\\t<|file_separator|>\\\\n', 59, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 60, 2, '\\\\t<|file_separator|>\\\\n', 60, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 59, 2, '\\\\t<|file_separator|>\\\\n', 59, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n0 0\\n2 4\\n5 0\\n3 4\\n\", \"expected\": \"3\\n3\\n1\\n1\\n\"}",
            "{\"output\": \"1\\n\", \"expected\": \"3\\n3\\n1\\n1\\n\", \"inputs\": \"4\\n0 0\\n2 4\\n5 0\\n3 4\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 65, 2, '\\\\t<|file_separator|>\\\\n', 65, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 56, 2, '\\\\t<|file_separator|>\\\\n', 56, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 61, 2, '\\\\t<|file_separator|>\\\\n', 61, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 66, 2, '\\\\t<|file_separator|>\\\\n', 66, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 71, 2, '\\\\t<|file_separator|>\\\\n', 71, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}"
        ],
        [
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 67, 2, '\\\\t<|file_separator|>\\\\n', 67, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 68, 2, '\\\\t<|file_separator|>\\\\n', 68, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"5\\n\", \"expected\": \"40\\n\", \"inputs\": \"4\\n100 1\\n20 5\\n30 5\\n40 1\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 69, 2, '\\\\t<|file_separator|>\\\\n', 69, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 61, 2, '\\\\t<|file_separator|>\\\\n', 61, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 68, 2, '\\\\t<|file_separator|>\\\\n', 68, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 68, 2, '\\\\t<|file_separator|>\\\\n', 68, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n100 1\\n20 5\\n30 5\\n40 1\\n\", \"expected\": \"40\\n\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 66, 2, '\\\\t<|file_separator|>\\\\n', 66, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"AssertionError()\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n100 1\\n20 5\\n30 5\\n40 1\\n\", \"expected\": \"40\\n\"}"
        ],
        [
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 68, 2, '\\\\t<|file_separator|>\\\\n', 68, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"\", \"expected\": \"Yes\\n\", \"inputs\": \"4 4\\nS...\\n#..#\\n#...\\n..#T\\n4\\n1 1 3\\n1 3 5\\n3 2 1\\n2 3 1\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 74, 41, '\\\\t            energy += medicines[curren<|file_separator|>\\\\n', 74, 42))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 74, 53, '\\\\t            next_cell = (current_cell[0] + dx, cur<|file_separator|>\\\\n', 74, 54))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"\", \"expected\": \"Yes\\n\", \"inputs\": \"4 4\\nS...\\n#..#\\n#...\\n..#T\\n4\\n1 1 3\\n1 3 5\\n3 2 1\\n2 3 1\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"\", \"expected\": \"Yes\\n\", \"inputs\": \"4 4\\nS...\\n#..#\\n#...\\n..#T\\n4\\n1 1 3\\n1 3 5\\n3 2 1\\n2 3 1\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 74, 2, '\\\\t<|file_separator|>\\\\n', 74, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"\", \"expected\": \"Yes\\n\", \"inputs\": \"4 4\\nS...\\n#..#\\n#...\\n..#T\\n4\\n1 1 3\\n1 3 5\\n3 2 1\\n2 3 1\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"\", \"expected\": \"Yes\\n\", \"inputs\": \"4 4\\nS...\\n#..#\\n#...\\n..#T\\n4\\n1 1 3\\n1 3 5\\n3 2 1\\n2 3 1\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"\", \"expected\": \"Yes\\n\", \"inputs\": \"4 4\\nS...\\n#..#\\n#...\\n..#T\\n4\\n1 1 3\\n1 3 5\\n3 2 1\\n2 3 1\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 74, 2, '\\\\t<|file_separator|>\\\\n', 74, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 70, 2, '\\\\t<|file_separator|>\\\\n', 70, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 71, 2, '\\\\t<|file_separator|>\\\\n', 71, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 72, 2, '\\\\t<|file_separator|>\\\\n', 72, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 87, 6, '\\\\tmai<|file_separator|>\\\\n', 87, 7))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 67, 2, '\\\\t<|file_separator|>\\\\n', 67, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 69, 2, '\\\\t<|file_separator|>\\\\n', 69, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 79, 2, '\\\\t<|file_separator|>\\\\n', 79, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 82, 2, '\\\\t<|file_separator|>\\\\n', 82, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"NameError(\\\"name 'edges' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 2\\n1 3\\n2 4\\n1 1 1 2\\n\", \"expected\": \"5\\n\"}"
        ],
        [
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 46, 2, '\\\\t<|file_separator|>\\\\n', 46, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 46, 2, '\\\\t<|file_separator|>\\\\n', 46, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{}",
            "{}",
            "{\"error\": \"UnboundLocalError(\\\"local variable 'final_score' referenced before assignment\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 -2 -1\\n\", \"expected\": \"2\\n\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 51, 2, '\\\\t<|file_separator|>\\\\n', 51, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{}",
            "{}",
            "{}",
            "{}"
        ],
        [
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 294, 2, '\\\\t<|file_separator|>\\\\n', 294, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('unterminated string literal (detected at line 87)', ('<string>', 87, 6, '\\\\ts = \\\"aabbccdddeeeeeffggghhh<|file_separator|>', 87, 6))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'commencement'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"commencement\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'commencement'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"commencement\\n\", \"expected\": \"Yes\\n\"}",
            "{\"output\": \"False\\nFalse\\nFalse\\nTrue\\nFalse\\nFalse\\n\", \"expected\": \"Yes\\n\", \"inputs\": \"commencement\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('unterminated string literal (detected at line 92)', ('<string>', 92, 23, '\\\\tprint(is_good_string(\\\"aaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaaabaa', 92, 23))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 147, 2, '\\\\t<|file_separator|>\\\\n', 147, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"KeyError(0)\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"commencement\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 82, 2, '\\\\t<|file_separator|>\\\\n', 82, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('unterminated string literal (detected at line 92)', ('<string>', 92, 6, '\\\\ts = \\\"aabbccdddeeeeeffggghhh<|file_separator|>', 92, 6))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}"
        ],
        [
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 83, 23, '\\\\t        if subsequen<|file_separator|>\\\\n', 83, 24))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 92, 106, '\\\\t    if T[0] == T[1] == T[2] == T[3] == T[4] == T[5] == T[6] == T[7] == T[8] == T[9] == T[10] == T[11] ==\\\\n', 92, 106))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"No\\n\", \"expected\": \"Yes\\n\", \"inputs\": \"narita\\nNRT\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\\nFalse\\nFalse\\nFalse\\nFalse\\nFalse\\nFalse\\nFalse\\nFalse\\nFalse\\nFalse\\nFalse\\nFalse\\nFalse\\nFalse\\nFalse\\nFals...(truncated) ...lse\\nFalse\\nFalse\\nFalse\\nFalse\\nFalse\\nFalse\\nFalse\\nFalse\\nFalse\\nFalse\\nFalse\\nFalse\\nFalse\\nFalse\\nFalse\\nFalse\\n\", \"expected\": \"Yes\\n\", \"inputs\": \"narita\\nNRT\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 83, 6, '\\\\t    <|file_separator|>\\\\n', 83, 7))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('unterminated string literal (detected at line 90)', ('<string>', 90, 31, '\\\\tprint(is_airport_codeerror_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 162, 2, '\\\\t<|file_separator|>\\\\n', 162, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 83, 2, '\\\\t<|file_separator|>\\\\n', 83, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"\", \"expected\": \"Yes\\n\", \"inputs\": \"narita\\nNRT\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 61, 2, '\\\\t<|file_separator|>\\\\n', 61, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}"
        ],
        [
            "{\"error\": \"SyntaxError(\\\"'(' was never closed\\\", ('<string>', 100, 30, '\\\\tprint(minimum_good_sequences(1000000000000000\\\\n', 100, 0))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 68, 28, '\\\\t    return min_good_seque<|file_separator|>\\\\n', 68, 29))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 84, 2, '\\\\t<|file_separator|>\\\\n', 84, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n\", \"expected\": \"5\\n3 4\\n4 8\\n8 16\\n16 18\\n18 19\\n\", \"inputs\": \"3 19\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 80, 2, '\\\\t<|file_separator|>\\\\n', 80, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 71, 2, '\\\\t<|file_separator|>\\\\n', 71, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"IndentationError(\\\"expected an indented block after 'if' statement on line 67\\\", ('<string>', 68, 1, '\\\\t<|file_separator|>\\\\n', 68, -1))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"\", \"expected\": \"5\\n3 4\\n4 8\\n8 16\\n16 18\\n18 19\\n\", \"inputs\": \"3 19\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 91, 2, '\\\\t<|file_separator|>\\\\n', 91, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"1\\n1 10\\n\", \"expected\": \"5\\n3 4\\n4 8\\n8 16\\n16 18\\n18 19\\n\", \"inputs\": \"3 19\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 62, 2, '\\\\t<|file_separator|>\\\\n', 62, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 70, 2, '\\\\t<|file_separator|>\\\\n', 70, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"\", \"expected\": \"Takahashi\\n\", \"inputs\": \"0 0 0\\n0 1 0\\n0 0 0\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 146, 58, '\\\\t        if grid[0][col] == grid[1][col] == grid[2][col]<|file_separator|>\\\\n', 146, 59))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"R\\n\", \"expected\": \"Takahashi\\n\", \"inputs\": \"0 0 0\\n0 1 0\\n0 0 0\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 78, 2, '\\\\t<|file_separator|>\\\\n', 78, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 75, 2, '\\\\t<|file_separator|>\\\\n', 75, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 66, 2, '\\\\t<|file_separator|>\\\\n', 66, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"IndentationError('unindent does not match any outer indentation level', ('<string>', 73, 23, '\\\\t   <|file_separator|>\\\\n', 73, -1))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 119, 2, '\\\\t<|file_separator|>\\\\n', 119, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}"
        ],
        [
            "{\"output\": \"No\\n\", \"expected\": \"Yes\\n\", \"inputs\": \"ABC349\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"No\\n\", \"expected\": \"Yes\\n\", \"inputs\": \"ABC349\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"No\\n\", \"expected\": \"Yes\\n\", \"inputs\": \"ABC349\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"No\\n\", \"expected\": \"Yes\\n\", \"inputs\": \"ABC349\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"No\\n\", \"expected\": \"Yes\\n\", \"inputs\": \"ABC349\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 55, 2, '\\\\t<|file_separator|>\\\\n', 55, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"No\\n\", \"expected\": \"Yes\\n\", \"inputs\": \"ABC349\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"No\\n\", \"expected\": \"Yes\\n\", \"inputs\": \"ABC349\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 55, 2, '\\\\t<|file_separator|>\\\\n', 55, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 57, 2, '\\\\t<|file_separator|>\\\\n', 57, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}"
        ],
        [
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '30 6'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"30 6\\n2 9 18 27 18 9\\n\", \"expected\": \"28\\n\"}",
            "{\"output\": \"2\\n\", \"expected\": \"28\\n\", \"inputs\": \"30 6\\n2 9 18 27 18 9\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 55, 2, '\\\\t<|file_separator|>\\\\n', 55, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 58, 2, '\\\\t<|file_separator|>\\\\n', 58, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('unterminated string literal (detected at line 56)', ('<string>', 56, 85, \\\"\\\\tYou have $n$ gifts and you want to give all of them to children. Of course, you don't want to offend anyone, so all gifts should be equal between each other. The $i$-th gift consists of $a_i$ candies and $b_i$ oranges.\\\", 56, 85))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '2 9 18 27 18 9'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"30 6\\n2 9 18 27 18 9\\n\", \"expected\": \"28\\n\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 61, 2, '\\\\t<|file_separator|>\\\\n', 61, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{}",
            "{}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '2 9 18 27 18 9'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"30 6\\n2 9 18 27 18 9\\n\", \"expected\": \"28\\n\"}"
        ],
        [
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 68, 2, '\\\\t<|file_separator|>\\\\n', 68, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 59, 2, '\\\\t<|file_separator|>\\\\n', 59, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"164132\\n46329 90687 48952 122436 139238 11080 130103 17640 155154 17105 9744 105898 141656 127647 73092 94317 56387 22597 101201 99526 33909 163626 224...(truncated) ...81 115700 136408 125028 11570 139236 122874 33713 158819 57336 157253 60281 131797 32346 35452 82488 145954 158455 129124 136092 118133 136820 114821\\n\", \"expected\": \"0\\n\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 72, 2, '\\\\t<|file_separator|>\\\\n', 72, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"0\\n\", \"expected\": \"2\\n1 3\\n2 4\\n\", \"inputs\": \"200000\\n70797 135975 54251 15400 161496 94717 105029 18817 108046 162883 123366 31184 85233 179121 149338 127074 96723 65237 90094 54924 120230 85224 1...(truncated) ... 25134 43949 199377 20483 167648 121276 119852 62101 159033 137045 187578 77494 52195 187775 165553 130612 20437 175566 12256 9068 158940 77249 60522\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '46329 90687 48952 122436 139238 11080 130103 17640 155154 17105 9744 105898 141656 127647 73092 94317 56387 22597 101201 99526 33909 163626 22425 47470 5682 110846 24172 46673 113226 18841 31189 5698\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"164132\\n46329 90687 48952 122436 139238 11080 130103 17640 155154 17105 9744 105898 141656 127647 73092 94317 56387 22597 101201 99526 33909 163626 224...(truncated) ...81 115700 136408 125028 11570 139236 122874 33713 158819 57336 157253 60281 131797 32346 35452 82488 145954 158455 129124 136092 118133 136820 114821\\n\", \"expected\": \"0\\n\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 77, 2, '\\\\t<|file_separator|>\\\\n', 77, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 72, 2, '\\\\t<|file_separator|>\\\\n', 72, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 69, 2, '\\\\t<|file_separator|>\\\\n', 69, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError(\\\"'[' was never closed\\\", ('<string>', 168, 6, '\\\\tA = [1, 2, 3, 4, 5, 6\\\\n', 168, 0))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}"
        ],
        [
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 39, 2, '\\\\t```python\\\\n', 39, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 58, 2, '\\\\t<|file_separator|>\\\\n', 58, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 87, 26, '\\\\t        if not is_conne<|file_separator|>\\\\n', 87, 27))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 39, 2, '\\\\t```python\\\\n', 39, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 77, 2, '\\\\t<|file_separator|>\\\\n', 77, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"\", \"expected\": \"3\\n\", \"inputs\": \"4 3\\n1 2\\n2 3\\n1 4\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 89, 2, '\\\\t<|file_separator|>\\\\n', 89, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 77, 18, '\\\\t                <|file_separator|>\\\\n', 77, 19))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 82, 2, '\\\\t<|file_separator|>\\\\n', 82, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 75, 10, '\\\\t        <|file_separator|>\\\\n', 75, 11))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}"
        ],
        [
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 2 10 20'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2 10 20\\n\", \"expected\": \"20.000000000000000\\n\"}",
            "{\"output\": \"\", \"expected\": \"20.000000000000000\\n\", \"inputs\": \"3 2 10 20\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"60\\n\", \"expected\": \"20.000000000000000\\n\", \"inputs\": \"3 2 10 20\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"\", \"expected\": \"20.000000000000000\\n\", \"inputs\": \"3 2 10 20\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 78, 2, '\\\\t<|file_separator|>\\\\n', 78, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 56, 2, '\\\\t<|file_separator|>\\\\n', 56, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"15\\n1000000000\\n\", \"expected\": \"20.000000000000000\\n\", \"inputs\": \"3 2 10 20\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"15\\n1000000000\\n\", \"expected\": \"20.000000000000000\\n\", \"inputs\": \"3 2 10 20\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 67, 2, '\\\\t<|file_separator|>\\\\n', 67, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 60, 2, '\\\\t<|file_separator|>\\\\n', 60, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}"
        ],
        [
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 57, 2, '\\\\t<|file_separator|>\\\\n', 57, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"3\\n\", \"expected\": \"5\\n\", \"inputs\": \"0 1 0 1 2 2 0 0 1\\n1 1 0 0 0 0 1 0\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 57, 2, '\\\\t<|file_separator|>\\\\n', 57, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"0\\n\", \"expected\": \"1\\n\", \"inputs\": \"0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\\n\", \"expected\": \"1\\n\", \"inputs\": \"0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 57, 2, '\\\\t<|file_separator|>\\\\n', 57, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"0\\n\", \"expected\": \"1\\n\", \"inputs\": \"0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\\n\", \"expected\": \"1\\n\", \"inputs\": \"0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 57, 2, '\\\\t<|file_separator|>\\\\n', 57, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 57, 2, '\\\\t<|file_separator|>\\\\n', 57, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}"
        ],
        [
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 63, 2, '\\\\t<|file_separator|>\\\\n', 63, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 61, 2, '\\\\t<|file_separator|>\\\\n', 61, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"1 0\\n\", \"expected\": \"2 1\\n\", \"inputs\": \"3\\nabc\\ndef\\nghi\\nabc\\nbef\\nghi\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1 0\\n\", \"expected\": \"2 1\\n\", \"inputs\": \"3\\nabc\\ndef\\nghi\\nabc\\nbef\\nghi\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1 0\\n\", \"expected\": \"2 1\\n\", \"inputs\": \"3\\nabc\\ndef\\nghi\\nabc\\nbef\\nghi\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 62, 2, '\\\\t<|file_separator|>\\\\n', 62, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"1 0\\n\", \"expected\": \"2 1\\n\", \"inputs\": \"3\\nabc\\ndef\\nghi\\nabc\\nbef\\nghi\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 59, 2, '\\\\t<|file_separator|>\\\\n', 59, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 59, 2, '\\\\t<|file_separator|>\\\\n', 59, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 63, 2, '\\\\t<|file_separator|>\\\\n', 63, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}"
        ],
        [
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 58, 2, '\\\\t<|file_separator|>\\\\n', 58, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"5\\n\", \"expected\": \"3\\n\", \"inputs\": \"7\\n2 1 1 3 5 3 3\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 57, 2, '\\\\t<|file_separator|>\\\\n', 57, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 52, 2, '\\\\t<|file_separator|>\\\\n', 52, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"IndexError('pop from empty list')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n0 0 0 1 2\\n\", \"expected\": \"4\\n\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 55, 2, '\\\\t<|file_separator|>\\\\n', 55, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"3\\n\", \"expected\": \"4\\n\", \"inputs\": \"5\\n0 0 0 1 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 58, 2, '\\\\t<|file_separator|>\\\\n', 58, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 58, 2, '\\\\t<|file_separator|>\\\\n', 58, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '2 1 1 3 5 3 3'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\n2 1 1 3 5 3 3\\n\", \"expected\": \"3\\n\"}"
        ],
        [
            "{\"error\": \"TypeError(\\\"'bool' object is not iterable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 5\\n.#...\\n.....\\n.#..#\\n\", \"expected\": \"9\\n\"}",
            "{\"error\": \"SyntaxError(\\\"'[' was never closed\\\", ('<string>', 227, 6, '\\\\tgrid[0\\\\n', 227, 0))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 79, 2, '\\\\t<|file_separator|>\\\\n', 79, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 5'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 5\\n.#...\\n.....\\n.#..#\\n\", \"expected\": \"9\\n\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 80, 88, '\\\\t            if 0 <= ni < len(grid) and 0 <= nj < len(grid[0]) and not visited[ni][nj]<|file_separator|>\\\\n', 80, 89))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"0\\n\", \"expected\": \"9\\n\", \"inputs\": \"3 5\\n.#...\\n.....\\n.#..#\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '.#...'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 5\\n.#...\\n.....\\n.#..#\\n\", \"expected\": \"9\\n\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 77, 2, '\\\\t<|file_separator|>\\\\n', 77, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '.#...'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 5\\n.#...\\n.....\\n.#..#\\n\", \"expected\": \"9\\n\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 85, 2, '\\\\t<|file_separator|>\\\\n', 85, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}"
        ],
        [
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 82, 2, '\\\\t<|file_separator|>\\\\n', 82, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 76, 2, '\\\\t<|file_separator|>\\\\n', 76, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 67, 2, '\\\\t<|file_separator|>\\\\n', 67, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 71, 2, '\\\\t<|file_separator|>\\\\n', 71, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 67, 2, '\\\\t<|file_separator|>\\\\n', 67, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 79, 2, '\\\\t<|file_separator|>\\\\n', 79, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 80, 2, '\\\\t<|file_separator|>\\\\n', 80, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 81, 2, '\\\\t<|file_separator|>\\\\n', 81, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 70, 2, '\\\\t<|file_separator|>\\\\n', 70, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 73, 2, '\\\\t<|file_separator|>\\\\n', 73, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}"
        ],
        [
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 69, 2, '\\\\t<|file_separator|>\\\\n', 69, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 49, 2, '\\\\t<|file_separator|>\\\\n', 49, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 49, 2, '\\\\t<|file_separator|>\\\\n', 49, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 54, 2, '\\\\t<|file_separator|>\\\\n', 54, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n2 5 3\\n\", \"expected\": \"4\\n\"}",
            "{\"output\": \"45\\n\", \"expected\": \"58\\n\", \"inputs\": \"10\\n5 9 3 0 4 8 7 5 4 0\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 49, 2, '\\\\t<|file_separator|>\\\\n', 49, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 69, 2, '\\\\t<|file_separator|>\\\\n', 69, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"45\\n\", \"expected\": \"58\\n\", \"inputs\": \"10\\n5 9 3 0 4 8 7 5 4 0\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 60, 2, '\\\\t<|fim_middle|>Given an integer sequence $A = (A_1, A_2, \\\\\\\\dots, A_n)$. Calculate the following expression:\\\\n', 60, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}"
        ],
        [
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 58, 2, '\\\\t<|file_separator|>\\\\n', 58, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 65, 2, '\\\\t<|file_separator|>\\\\n', 65, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '7 6 1 3'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7 6 1 3\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 61, 2, '\\\\t<|file_separator|>\\\\n', 61, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"Yes\\n\", \"expected\": \"No\\n\", \"inputs\": \"10 3 2 9\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 64, 2, '\\\\t<|file_separator|>\\\\n', 64, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 51, 2, '\\\\t<|file_separator|>\\\\n', 51, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 58, 2, '\\\\t<|file_separator|>\\\\n', 58, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"Yes\\n\", \"expected\": \"No\\n\", \"inputs\": \"10 3 2 9\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"Yes\\n\", \"expected\": \"No\\n\", \"inputs\": \"10 3 2 9\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"error\": \"SyntaxError('unterminated string literal (detected at line 236)', ('<string>', 236, 6, '\\\\tS = \\\"', 236, 6))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"1\\n\", \"expected\": \"1 3 6\\n\", \"inputs\": \"abc\\naxbxyc\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 66, 2, '\\\\t<|file_separator|>\\\\n', 66, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"abc\\naxbxyc\\n\", \"expected\": \"1 3 6\\n\"}",
            "{\"output\": \"0\\n\", \"expected\": \"1 3 6\\n\", \"inputs\": \"abc\\naxbxyc\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1 \\n\", \"expected\": \"1 3 6\\n\", \"inputs\": \"abc\\naxbxyc\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 63, 2, '\\\\t<|file_separator|>\\\\n', 63, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"1\\n\", \"expected\": \"1 3 6\\n\", \"inputs\": \"abc\\naxbxyc\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1 \\n\", \"expected\": \"1 3 6\\n\", \"inputs\": \"abc\\naxbxyc\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"No positions found\\n\", \"expected\": \"1 3 6\\n\", \"inputs\": \"abc\\naxbxyc\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"error\": \"TypeError(\\\"'tuple' object does not support item assignment\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n4 10\\n5 8\\n2 9\\n\", \"expected\": \"18\\n\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 70, 2, '\\\\t<|file_separator|>\\\\n', 70, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 70, 2, '\\\\t<|file_separator|>\\\\n', 70, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"8\\n\", \"expected\": \"18\\n\", \"inputs\": \"3\\n4 10\\n5 8\\n2 9\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 70, 2, '\\\\t<|file_separator|>\\\\n', 70, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"TypeError(\\\"'tuple' object does not support item assignment\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n4 10\\n5 8\\n2 9\\n\", \"expected\": \"18\\n\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 67, 2, '\\\\t<|file_separator|>\\\\n', 67, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 66, 2, '\\\\t<|file_separator|>\\\\n', 66, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 70, 2, '\\\\t<|file_separator|>\\\\n', 70, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"29\\n\", \"expected\": \"18\\n\", \"inputs\": \"3\\n4 10\\n5 8\\n2 9\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 71, 2, '\\\\t<|file_separator|>\\\\n', 71, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '4 2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 2\\n2 3 1 4\\n\", \"expected\": \"1\\n\"}",
            "{\"error\": \"TypeError('can only concatenate list (not \\\"int\\\") to list')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 2\\n2 3 1 4\\n\", \"expected\": \"1\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '4 2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 2\\n2 3 1 4\\n\", \"expected\": \"1\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '4 2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 2\\n2 3 1 4\\n\", \"expected\": \"1\\n\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 73, 2, '\\\\t<|file_separator|>\\\\n', 73, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"6\\n\", \"expected\": \"5\\n\", \"inputs\": \"10 5\\n10 1 6 8 7 2 5 9 3 4\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 81, 2, '\\\\t<|file_separator|>\\\\n', 81, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '4 2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 2\\n2 3 1 4\\n\", \"expected\": \"1\\n\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 87, 2, '\\\\t<|file_separator|>\\\\n', 87, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}"
        ],
        [
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 80, 2, '\\\\t<|file_separator|>\\\\n', 80, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"\", \"expected\": \"9\\n\", \"inputs\": \"4 3\\n3 3\\n1 2 3\\n2 2\\n1 2\\n3 4\\n1 3 4\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 85, 6, '\\\\tmai<|file_separator|>\\\\n', 85, 7))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 79, 2, '\\\\t<|file_separator|>\\\\n', 79, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 76, 2, '\\\\t<|file_separator|>\\\\n', 76, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"\", \"expected\": \"9\\n\", \"inputs\": \"4 3\\n3 3\\n1 2 3\\n2 2\\n1 2\\n3 4\\n1 3 4\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 82, 43, '\\\\t    minimum_spanning_tree(n, m, operatio<|file_separator|>\\\\n', 82, 44))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 3\\n3 3\\n1 2 3\\n2 2\\n1 2\\n3 4\\n1 3 4\\n\", \"expected\": \"9\\n\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 99, 6, '\\\\tmai<|file_separator|>\\\\n', 99, 7))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 82, 2, '\\\\t<|file_separator|>\\\\n', 82, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}"
        ],
        [
            "{}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 55, 2, '\\\\t<|file_separator|>\\\\n', 55, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 54, 2, '\\\\t<|file_separator|>\\\\n', 54, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 57, 2, '\\\\t<|file_separator|>\\\\n', 57, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{}",
            "{}",
            "{}",
            "{}",
            "{}",
            "{}"
        ],
        [
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '7 6'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7 6\\n2 5 1 4 1 2 3\\n\", \"expected\": \"4\\n\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 63, 2, '\\\\t<|file_separator|>\\\\n', 63, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '7 6'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7 6\\n2 5 1 4 1 2 3\\n\", \"expected\": \"4\\n\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 67, 2, '\\\\t<|file_separator|>\\\\n', 67, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '7 6'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7 6\\n2 5 1 4 1 2 3\\n\", \"expected\": \"4\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '7 6'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7 6\\n2 5 1 4 1 2 3\\n\", \"expected\": \"4\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '7 6'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7 6\\n2 5 1 4 1 2 3\\n\", \"expected\": \"4\\n\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 63, 2, '\\\\t<|file_separator|>\\\\n', 63, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 61, 2, '\\\\t<|file_separator|>\\\\n', 61, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 65, 2, '\\\\t<|file_separator|>\\\\n', 65, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}"
        ],
        [
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 56, 2, '\\\\t<|file_separator|>\\\\n', 56, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 54, 2, '\\\\t<|file_separator|>\\\\n', 54, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 55, 2, '\\\\t<|file_separator|>\\\\n', 55, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 53, 2, '\\\\t<|file_separator|>\\\\n', 53, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 63, 2, '\\\\t<|file_separator|>\\\\n', 63, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 55, 2, '\\\\t<|file_separator|>\\\\n', 55, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 53, 2, '\\\\t<|file_separator|>\\\\n', 53, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 62, 2, '\\\\t<|file_separator|>\\\\n', 62, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 59, 2, '\\\\t<|file_separator|>\\\\n', 59, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 61, 2, '\\\\t<|file_separator|>\\\\n', 61, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}"
        ],
        [
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 65, 2, '\\\\t<|file_separator|>\\\\n', 65, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 60, 2, '\\\\t<|file_separator|>\\\\n', 60, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 70, 2, '\\\\t<|file_separator|>\\\\n', 70, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 56, 2, '\\\\t<|file_separator|>\\\\n', 56, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 59, 2, '\\\\t<|file_separator|>\\\\n', 59, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 53, 2, '\\\\t<|file_separator|>\\\\n', 53, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 55, 2, '\\\\t<|file_separator|>\\\\n', 55, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 55, 2, '\\\\t<|file_separator|>\\\\n', 55, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 61, 2, '\\\\t<|file_separator|>\\\\n', 61, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 60, 2, '\\\\t<|file_separator|>\\\\n', 60, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}"
        ],
        [
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\nab abc arc\\n\", \"expected\": \"4\\n\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 60, 2, '\\\\t<|file_separator|>\\\\n', 60, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\nab abc arc\\n\", \"expected\": \"4\\n\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 58, 2, '\\\\t<|file_separator|>\\\\n', 58, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 89, 10, '\\\\t        <|file_separator|>\\\\n', 89, 11))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 58, 2, '\\\\t<|file_separator|>\\\\n', 58, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 87, 10, '\\\\t        <|file_separator|>\\\\n', 87, 11))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\nab abc arc\\n\", \"expected\": \"4\\n\"}",
            "{\"error\": \"NameError(\\\"name 'TrieNode' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\nab abc arc\\n\", \"expected\": \"4\\n\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 95, 2, '\\\\t<|file_separator|>\\\\n', 95, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}"
        ],
        [
            "{\"output\": \"3\\n\", \"expected\": \"4\\n\", \"inputs\": \"7\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 51, 2, '\\\\t<|file_separator|>\\\\n', 51, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 52, 2, '\\\\t<|file_separator|>\\\\n', 52, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 52, 2, '\\\\t<|file_separator|>\\\\n', 52, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 51, 2, '\\\\t<|file_separator|>\\\\n', 51, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"3\\n\", \"expected\": \"4\\n\", \"inputs\": \"7\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"54\\n\", \"expected\": \"6\\n\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 51, 2, '\\\\t<|file_separator|>\\\\n', 51, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"54\\n\", \"expected\": \"6\\n\"}",
            "{\"output\": \"3\\n\", \"expected\": \"4\\n\", \"inputs\": \"7\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\ntakahashi 2\\naoki 6\\nsnuke 5\\n\", \"expected\": \"snuke\\n\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\ntakahashi 2\\naoki 6\\nsnuke 5\\n\", \"expected\": \"snuke\\n\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 69, 2, '\\\\t<|file_separator|>\\\\n', 69, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\ntakahashi 2\\naoki 6\\nsnuke 5\\n\", \"expected\": \"snuke\\n\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 66, 2, '\\\\t<|file_separator|>\\\\n', 66, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 67, 2, '\\\\t<|file_separator|>\\\\n', 67, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\ntakahashi 2\\naoki 6\\nsnuke 5\\n\", \"expected\": \"snuke\\n\"}",
            "{}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\ntakahashi 2\\naoki 6\\nsnuke 5\\n\", \"expected\": \"snuke\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'takahashi'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\ntakahashi 2\\naoki 6\\nsnuke 5\\n\", \"expected\": \"snuke\\n\"}"
        ],
        [
            "{\"output\": \"3\\n0 1 2\\n\", \"expected\": \"2\\n2 3\\n\", \"inputs\": \"3\\n2 4\\n1 1\\n3 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 70, 2, '\\\\t<|file_separator|>\\\\n', 70, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 60, 2, '\\\\t<|file_separator|>\\\\n', 60, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"2\\n0 2\\n\", \"expected\": \"2\\n2 3\\n\", \"inputs\": \"3\\n2 4\\n1 1\\n3 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 70, 2, '\\\\t<|file_separator|>\\\\n', 70, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 71, 26, '\\\\t    min_cost_card_index<|file_separator|>\\\\n', 71, 27))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 62, 2, '\\\\t<|file_separator|>\\\\n', 62, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 82, 16, '\\\\t        disca<|file_separator|>\\\\n', 82, 17))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 81, 43, '\\\\t    print(*[i + 1 for i in range(n) if i<|file_separator|>\\\\n', 81, 44))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"3\\n3 1 1\\n\", \"expected\": \"2\\n2 3\\n\", \"inputs\": \"3\\n2 4\\n1 1\\n3 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 85, 2, '\\\\t<|file_separator|>\\\\n', 85, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError(\\\"'[' was never closed\\\", ('<string>', 41, 14, '\\\\t    lines = [', 41, 0))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 79, 34, '\\\\t            x_end = max(rectang<|file_separator|>\\\\n', 79, 35))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 77, 36, '\\\\t            if (x, y) in rectangl<|file_separator|>\\\\n', 77, 37))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 100, 2, '\\\\t<|file_separator|>\\\\n', 100, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"0 0 3 3\\n\", \"expected\": \"10\\n\"}",
            "{\"error\": \"SyntaxError(\\\"'[' was never closed\\\", ('<string>', 69, 10, \\\"\\\\t        ['x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x',\\\\n\\\", 69, 0))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"8\\n\", \"expected\": \"10\\n\", \"inputs\": \"0 0 3 3\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 97, 2, '\\\\t<|file_separator|>\\\\n', 97, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 76, 2, '\\\\t<|file_separator|>\\\\n', 76, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}"
        ],
        [
            "{\"output\": \"Player 2 wins\\n\", \"expected\": \"Aoki\\n\", \"inputs\": \"5\\n1 9\\n2 5\\n4 9\\n1 4\\n2 5\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndentationError('unindent does not match any outer indentation level', ('<string>', 94, 22, '\\\\t  <|file_separator|>\\\\n', 94, -1))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 77, 2, '\\\\t<|file_separator|>\\\\n', 77, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError(\\\"'[' was never closed\\\", ('<string>', 141, 144, '\\\\tcards = [[1, 2], [2, 3], [3, 4], [4, 5], [5, 6], [6, 7], [7, 8], [8, 9], [9, 10], [10, 11], [11, 12], [12, 13], [13, 14], [14, 15], [15, 16], [16\\\\n', 141, 0))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 81, 2, '\\\\t<|file_separator|>\\\\n', 81, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 81, 26, '\\\\t        memo[i][j][0] = <|file_separator|>\\\\n', 81, 27))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 71, 2, '\\\\t<|file_separator|>\\\\n', 71, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"\", \"expected\": \"Aoki\\n\", \"inputs\": \"5\\n1 9\\n2 5\\n4 9\\n1 4\\n2 5\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"Player 1 wins\\n\", \"expected\": \"Aoki\\n\", \"inputs\": \"5\\n1 9\\n2 5\\n4 9\\n1 4\\n2 5\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"5\\n1 9\\n2 5\\n4 9\\n1 4\\n2 5\\n\", \"expected\": \"Aoki\\n\"}"
        ],
        [
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 52, 2, '\\\\t<|file_separator|>\\\\n', 52, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"1\\n\", \"expected\": \"3\\n\", \"inputs\": \"1 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 52, 2, '\\\\t<|file_separator|>\\\\n', 52, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"2\\n\", \"expected\": \"3\\n\", \"inputs\": \"1 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 55, 2, '\\\\t<|file_separator|>\\\\n', 55, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 53, 2, '\\\\t<|file_separator|>\\\\n', 53, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 53, 2, '\\\\t<|file_separator|>\\\\n', 53, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"0\\n\", \"expected\": \"3\\n\", \"inputs\": \"1 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 59, 2, '\\\\t<|file_separator|>\\\\n', 59, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"0\\n\", \"expected\": \"3\\n\", \"inputs\": \"1 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 147, 2, '\\\\t<|file_separator|>\\\\n', 147, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 96, 2, '\\\\t<|file_separator|>\\\\n', 96, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"False\\nFalse\\nTrue\\nTrue\\nTrue\\nTrue\\nTrue\\nTrue\\nTrue\\nTrue\\nTrue\\nTrue\\nTrue\\nTrue\\nTrue\\nTrue\\nTrue\\nTrue\\nTrue\\nTru...(truncated) ...True\\nTrue\\nTrue\\nTrue\\nTrue\\nTrue\\nTrue\\nTrue\\nTrue\\nTrue\\nTrue\\nTrue\\nTrue\\nTrue\\nTrue\\nTrue\\nTrue\\nTrue\\nTrue\\nTrue\\n\", \"expected\": \"Yes\\n\", \"inputs\": \"3 2\\n3 2 5\\n4 1\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError(\\\"'[' was never closed\\\", ('<string>', 234, 6, '\\\\ta = [1, 2,\\\\n', 234, 0))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 64, 2, '\\\\t<|file_separator|>\\\\n', 64, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"True\\n\", \"expected\": \"Yes\\n\", \"inputs\": \"3 2\\n3 2 5\\n4 1\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 136, 2, '\\\\t<|file_separator|>\\\\n', 136, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"True\\n\", \"expected\": \"Yes\\n\", \"inputs\": \"3 2\\n3 2 5\\n4 1\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 140, 2, '\\\\t<|file_separator|>\\\\n', 140, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"\", \"expected\": \"Yes\\n\", \"inputs\": \"3 2\\n3 2 5\\n4 1\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 72, 2, '\\\\t<|file_separator|>\\\\n', 72, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 76, 2, '\\\\t<|file_separator|>\\\\n', 76, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 68, 2, '\\\\t<|file_separator|>\\\\n', 68, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 5'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 5\\n5 1 8 9 7\\n\", \"expected\": \"4\\n\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 87, 2, '\\\\t<|file_separator|>\\\\n', 87, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 5'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 5\\n5 1 8 9 7\\n\", \"expected\": \"4\\n\"}",
            "{\"output\": \"3\\n\", \"expected\": \"4\\n\", \"inputs\": \"3 5\\n5 1 8 9 7\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 5'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 5\\n5 1 8 9 7\\n\", \"expected\": \"4\\n\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 75, 2, '\\\\t<|file_separator|>\\\\n', 75, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 5'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 5\\n5 1 8 9 7\\n\", \"expected\": \"4\\n\"}"
        ],
        [
            "{\"output\": \"\", \"expected\": \"2\\n\", \"inputs\": \"3\\n1 5\\n7 8\\n3 7\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\\n\", \"expected\": \"2\\n\", \"inputs\": \"3\\n1 5\\n7 8\\n3 7\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 61, 2, '\\\\t<|file_separator|>\\\\n', 61, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 65, 2, '\\\\t<|file_separator|>\\\\n', 65, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"0\\n\", \"expected\": \"2\\n\", \"inputs\": \"3\\n1 5\\n7 8\\n3 7\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 72, 40, '\\\\tprint(count_intersections(intervals))<|file_separator|>\\\\n', 72, 41))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 56, 2, '\\\\t<|file_separator|>\\\\n', 56, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"1\\n\", \"expected\": \"2\\n\", \"inputs\": \"3\\n1 5\\n7 8\\n3 7\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"\", \"expected\": \"2\\n\", \"inputs\": \"3\\n1 5\\n7 8\\n3 7\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 64, 2, '\\\\t<|file_separator|>\\\\n', 64, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}"
        ],
        [
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 67, 2, '\\\\t<|file_separator|>\\\\n', 67, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 65, 2, '\\\\t<|file_separator|>\\\\n', 65, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 68, 2, '\\\\t<|file_separator|>\\\\n', 68, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 73, 2, '\\\\t<|file_separator|>\\\\n', 73, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"output\": \"\", \"expected\": \"37\\n\", \"inputs\": \"3 1 5\\n31 41 59 26 53 58 97 93\\n3\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"\", \"expected\": \"37\\n\", \"inputs\": \"3 1 5\\n31 41 59 26 53 58 97 93\\n3\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TypeError(\\\"'<=' not supported between instances of 'str' and 'int'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 1 5\\n31 41 59 26 53 58 97 93\\n3\\n\", \"expected\": \"37\\n\"}",
            "{\"output\": \"\", \"expected\": \"37\\n\", \"inputs\": \"3 1 5\\n31 41 59 26 53 58 97 93\\n3\\n\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 79, 2, '\\\\t<|file_separator|>\\\\n', 79, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}",
            "{\"error\": \"SyntaxError('invalid syntax', ('<string>', 108, 2, '\\\\t<|file_separator|>\\\\n', 108, 3))\", \"error_code\": -1, \"error_message\": \"Compilation Error\"}"
        ]
    ]
]